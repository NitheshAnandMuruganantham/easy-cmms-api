generator nestgraphql {
  provider                        = "node node_modules/prisma-nestjs-graphql"
  output                          = "../src/@generated"
  reExport                        = Directories
  fields_Scalars_from             = "graphql-scalars"
  fields_Scalars_input            = true
  fields_Scalars_output           = true
  graphqlScalars_BigInt_name      = "GraphQLBigInt"
  graphqlScalars_BigInt_specifier = "graphql-scalars"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Block {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id                   BigInt                 @id @default(autoincrement())
  name                 String
  location             String
  machines             Machines[]
  Mailings             String[]               @default([])
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  Users                Users[]
  block_settings       block_settings[]
  production_data      production_data[]
  catagory             catagory[]
  Items                Items[]
  machine_catagory     machine_catagory[]
  Maintenance          Maintenance[]
  Replacements         Replacements[]
  Reports              Reports[]
  Sections             Sections[]
  Ticket               Ticket[]
  routine_maintanances routine_maintanances[]
}

model catagory {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id         BigInt   @id @default(autoincrement())
  name       String
  items      Items[]  @relation("item_catagory")
  created_at DateTime @default(now())
  /// @HideField({ output: false, input: true })
  block_id   BigInt
  /// @HideField({ output: false, input: true })
  block      Block    @relation(fields: [block_id], references: [id])
  updated_at DateTime @updatedAt
}

model Items {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id           BigInt         @id @default(autoincrement())
  name         String
  code         String
  quantity     Int
  unit_price   Float
  catagory_id  BigInt
  catagory     catagory       @relation("item_catagory", fields: [catagory_id], references: [id])
  replacements Replacements[]
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  /// @HideField({ output: false, input: true })
  block_id     BigInt
  /// @HideField({ output: false, input: true })
  block        Block          @relation(fields: [block_id], references: [id])
}

model Machines {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id                   BigInt                 @id @default(autoincrement())
  name                 String
  section_id           BigInt
  /// @HideField({ output: false, input: true })
  block_id             BigInt
  /// @HideField({ output: false, input: true })
  block                Block                  @relation(fields: [block_id], references: [id])
  label                String
  profile              Json                   @default("{}")
  priority             Int
  section              Sections               @relation(fields: [section_id], references: [id])
  maintenance          Maintenance[]
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt()
  Ticket               Ticket[]
  machine_catagory_id  BigInt
  machine_catagory     machine_catagory       @relation(fields: [machine_catagory_id], references: [id])
  routine_maintanances routine_maintanances[]
}

model machine_catagory {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id         BigInt     @id @default(autoincrement())
  name       String
  machines   Machines[]
  /// @HideField({ output: false, input: true })
  block_id   BigInt
  /// @HideField({ output: false, input: true })
  block      Block      @relation(fields: [block_id], references: [id])
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}

model Maintenance {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id           BigInt         @id @default(autoincrement())
  name         String
  photo        String?
  description  String
  from         DateTime       @db.Timestamp(0)
  to           DateTime       @db.Timestamp(0)
  resolved     Boolean
  metadata     Json           @default("{}")
  un_planned   Boolean
  elapsed      DateTime?      @db.Timestamp(0)
  assignee_id  BigInt
  assignee     Users          @relation(fields: [assignee_id], references: [id])
  machine_id   BigInt
  machines     Machines       @relation(fields: [machine_id], references: [id])
  replacements Replacements[]
  reports      Reports[]      @relation("report_maintance_id_foreign")
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  ticket       Ticket?
  /// @HideField({ output: false, input: true })
  block_id     BigInt
  /// @HideField({ output: false, input: true })
  block        Block          @relation(fields: [block_id], references: [id])
}

model Replacements {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id             BigInt      @id @default(autoincrement())
  name           String
  description    String
  quantity       Int
  metadata       Json        @default("{}")
  item_id        BigInt
  items          Items       @relation(fields: [item_id], references: [id])
  maintanance_id BigInt
  maintenance    Maintenance @relation(fields: [maintanance_id], references: [id])
  created_at     DateTime    @default(now())
  approved       Boolean     @default(false)
  updated_at     DateTime    @updatedAt
  /// @HideField({ output: false, input: true })
  block_id       BigInt
  /// @HideField({ output: false, input: true })
  block          Block       @relation(fields: [block_id], references: [id])
}

model Reports {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id             BigInt      @id @default(autoincrement())
  report         String
  sign           String
  tag            Json
  validated      BigInt
  validated_sign BigInt
  maintance_id   BigInt
  maintenance    Maintenance @relation("report_maintance_id_foreign", fields: [maintance_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "report_maintance_id_foreign")
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
  /// @HideField({ output: false, input: true })
  block_id       BigInt
  /// @HideField({ output: false, input: true })
  block          Block       @relation(fields: [block_id], references: [id])
}

model Sections {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id         BigInt     @id @default(autoincrement())
  name       String
  machines   Machines[]
  /// @HideField({ output: false, input: true })
  block_id   BigInt
  /// @HideField({ output: false, input: true })
  block      Block      @relation(fields: [block_id], references: [id])
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}

model Users {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id           BigInt  @id @default(autoincrement())
  profile      Json    @default("{}")
  phone        String  @unique
  /// @HideField({ output: true, input: true })
  user_auth_id String? @unique
  name         String
  /// @HideField({ output: false, input: true })
  blockId      BigInt
  /// @HideField({ output: false, input: true })

  block                Block                  @relation(fields: [blockId], references: [id])
  maintenance          Maintenance[]
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  role                 Role
  extra_roles          Role[]                 @default([])
  role_alias           String                 @default("user")
  ticket               Ticket[]
  routine_maintanances routine_maintanances[]
  /// @HideField({ output: false, input: false })
  production_data      production_data[]
}

model Ticket {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id             BigInt        @id @default(autoincrement())
  name           String
  description    String
  photos         String
  /// @HideField({ output: false, input: true })
  user_id        BigInt
  /// @HideField({ output: false, input: true })
  user           Users         @relation(fields: [user_id], references: [id])
  maintenance_id BigInt?       @unique
  maintenance    Maintenance?  @relation(fields: [maintenance_id], references: [id])
  machine_id     BigInt
  machines       Machines      @relation(fields: [machine_id], references: [id])
  status         ticket_status
  created_at     DateTime      @default(now())
  updated_at     DateTime      @updatedAt
  /// @HideField({ output: false, input: true })
  block_id       BigInt
  /// @HideField({ output: false, input: true })

  block Block @relation(fields: [block_id], references: [id])
}

enum Role {
  MANAGER
  SUPERVISOR
  ENGINEER
  GUEST
  FITTER
  PRODUCTION_CONTROLLER
  INPUT_CONTROLLER
  ADMIN
}

model routine_maintanances {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id          BigInt   @id @default(autoincrement())
  name        String
  description String
  cron        String
  duration    Int
  assignee_id BigInt
  assignee    Users    @relation(fields: [assignee_id], references: [id])
  meachine_id BigInt
  meachine    Machines @relation(fields: [meachine_id], references: [id])
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  /// @HideField({ output: false, input: true })
  block_id    BigInt
  /// @HideField({ output: false, input: true })
  block       Block    @relation(fields: [block_id], references: [id])
}

enum ticket_status {
  OPEN
  CLOSED
  PENDING
}

model block_settings {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id         BigInt   @id @default(autoincrement())
  block_id   BigInt
  block      Block    @relation(fields: [block_id], references: [id])
  name       String
  value      Json
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([block_id, name])
}

model production_data {
  /// @FieldType({ name: 'Scalars.GraphQLBigInt', from: 'graphql-scalars', input: false })
  id         BigInt   @id @default(autoincrement())
  production Json     @default("{}")
  shift      String
  date       DateTime
  updated_by BigInt
  updatedBy  Users    @relation(fields: [updated_by], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  /// @HideField({ output: false, input: true })
  Block      Block    @relation(fields: [blockId], references: [id])
  /// @HideField({ output: false, input: true })
  blockId    BigInt
}
