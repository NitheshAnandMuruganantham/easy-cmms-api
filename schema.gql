# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BlockCountAggregate {
  id: Int!
  name: Int!
  location: Int!
  Mailings: Int!
  created_at: Int!
  updated_at: Int!
  _all: Int!
}

type BlockAvgAggregate {
  id: Float
}

type BlockSumAggregate {
  id: BigInt
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

type BlockMinAggregate {
  id: BigInt
  name: String
  location: String
  created_at: DateTime
  updated_at: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type BlockMaxAggregate {
  id: BigInt
  name: String
  location: String
  created_at: DateTime
  updated_at: DateTime
}

type BlockCount {
  machines: Int!
  Users: Int!
  block_settings: Int!
  production_data: Int!
  catagory: Int!
  Items: Int!
  machine_catagory: Int!
  Maintenance: Int!
  Replacements: Int!
  Reports: Int!
  Sections: Int!
  Ticket: Int!
  routine_maintanances: Int!
}

type Block_settingsAvgAggregate {
  id: Float
  block_id: Float
}

type Block_settingsMaxAggregate {
  id: BigInt
  block_id: BigInt
  name: String
  created_at: DateTime
  updated_at: DateTime
}

type Block_settingsMinAggregate {
  id: BigInt
  block_id: BigInt
  name: String
  created_at: DateTime
  updated_at: DateTime
}

type Block_settingsSumAggregate {
  id: BigInt
  block_id: BigInt
}

type SectionsCount {
  machines: Int!
}

type Sections {
  id: BigInt!
  name: String!
  block_id: BigInt!
  created_at: DateTime!
  updated_at: DateTime!
  machines: [Machines!]
  block: Block!
  _count: SectionsCount!
}

type Ticket {
  id: BigInt!
  name: String!
  description: String!
  photos: String!
  user_id: BigInt!
  maintenance_id: BigInt
  machine_id: BigInt!
  status: ticket_status!
  created_at: DateTime!
  updated_at: DateTime!
  block_id: BigInt!
  user: Users!
  maintenance: Maintenance
  machines: Machines!
  block: Block!
  maintanance: Maintenance
  machine: Machines!
}

enum ticket_status {
  OPEN
  CLOSED
  PENDING
}

type routine_maintanances {
  id: BigInt!
  name: String!
  description: String!
  cron: String!
  duration: Int!
  assignee_id: BigInt!
  meachine_id: BigInt!
  created_at: DateTime!
  updated_at: DateTime!
  block_id: BigInt!
  assignee: Users!
  meachine: Machines!
  block: Block!
}

type production_data {
  id: BigInt!
  production: JSON!
  shift: String!
  date: DateTime!
  updated_by: BigInt!
  created_at: DateTime!
  updated_at: DateTime!
  blockId: BigInt!
  updatedBy: Users!
  Block: Block!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type UsersCount {
  maintenance: Int!
  ticket: Int!
  routine_maintanances: Int!
  production_data: Int!
}

type Users {
  id: BigInt!
  profile: JSON!
  phone: String!
  name: String!
  blockId: BigInt!
  created_at: DateTime!
  updated_at: DateTime!
  role: Role!
  extra_roles: [Role!]
  role_alias: String!
  block: Block!
  maintenance(where: MaintenanceWhereInput, orderBy: MaintenanceOrderByWithRelationInput, limit: Int, offset: Int): [Maintenance!]
  ticket(where: TicketWhereInput, orderBy: TicketOrderByWithRelationInput, limit: Int, offset: Int): [Ticket!]
  routine_maintanances: [routine_maintanances!]
  production_data: [production_data!]
  _count: UsersCount!
}

enum Role {
  MANAGER
  SUPERVISOR
  ENGINEER
  GUEST
  FITTER
  PRODUCTION_CONTROLLER
  INPUT_CONTROLLER
  ADMIN
}

input MaintenanceWhereInput {
  AND: [MaintenanceWhereInput!]
  OR: [MaintenanceWhereInput!]
  NOT: [MaintenanceWhereInput!]
  id: BigIntFilter
  name: StringFilter
  photo: StringNullableFilter
  description: StringFilter
  from: DateTimeFilter
  to: DateTimeFilter
  resolved: BoolFilter
  metadata: JsonFilter
  un_planned: BoolFilter
  elapsed: DateTimeNullableFilter
  assignee_id: BigIntFilter
  machine_id: BigIntFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  assignee: UsersRelationFilter
  machines: MachinesRelationFilter
  replacements: ReplacementsListRelationFilter
  reports: ReportsListRelationFilter
  ticket: TicketRelationFilter
}

input BigIntFilter {
  equals: BigInt
  in: [BigInt!]
  notIn: [BigInt!]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: NestedBigIntFilter
}

input NestedBigIntFilter {
  equals: BigInt
  in: [BigInt!]
  notIn: [BigInt!]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: NestedBigIntFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  search: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  search: String
  not: NestedStringFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  search: String
  mode: QueryMode
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  search: String
  not: NestedStringNullableFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input JsonFilter {
  equals: JSON
  path: [String!]
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input UsersRelationFilter {
  is: UsersWhereInput
  isNot: UsersWhereInput
}

input UsersWhereInput {
  AND: [UsersWhereInput!]
  OR: [UsersWhereInput!]
  NOT: [UsersWhereInput!]
  id: BigIntFilter
  profile: JsonFilter
  phone: StringFilter
  name: StringFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  role: EnumRoleFilter
  extra_roles: EnumRoleNullableListFilter
  role_alias: StringFilter
  maintenance: MaintenanceListRelationFilter
  ticket: TicketListRelationFilter
  routine_maintanances: Routine_maintanancesListRelationFilter
  production_data: Production_dataListRelationFilter
}

input EnumRoleFilter {
  equals: Role
  in: [Role!]
  notIn: [Role!]
  not: NestedEnumRoleFilter
}

input NestedEnumRoleFilter {
  equals: Role
  in: [Role!]
  notIn: [Role!]
  not: NestedEnumRoleFilter
}

input EnumRoleNullableListFilter {
  equals: [Role!]
  has: Role
  hasEvery: [Role!]
  hasSome: [Role!]
  isEmpty: Boolean
}

input MaintenanceListRelationFilter {
  every: MaintenanceWhereInput
  some: MaintenanceWhereInput
  none: MaintenanceWhereInput
}

input TicketListRelationFilter {
  every: TicketWhereInput
  some: TicketWhereInput
  none: TicketWhereInput
}

input TicketWhereInput {
  AND: [TicketWhereInput!]
  OR: [TicketWhereInput!]
  NOT: [TicketWhereInput!]
  id: BigIntFilter
  name: StringFilter
  description: StringFilter
  photos: StringFilter
  maintenance_id: BigIntNullableFilter
  machine_id: BigIntFilter
  status: Enumticket_statusFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  maintenance: MaintenanceRelationFilter
  machines: MachinesRelationFilter
}

input BigIntNullableFilter {
  equals: BigInt
  in: [BigInt!]
  notIn: [BigInt!]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: NestedBigIntNullableFilter
}

input NestedBigIntNullableFilter {
  equals: BigInt
  in: [BigInt!]
  notIn: [BigInt!]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: NestedBigIntNullableFilter
}

input Enumticket_statusFilter {
  equals: ticket_status
  in: [ticket_status!]
  notIn: [ticket_status!]
  not: NestedEnumticket_statusFilter
}

input NestedEnumticket_statusFilter {
  equals: ticket_status
  in: [ticket_status!]
  notIn: [ticket_status!]
  not: NestedEnumticket_statusFilter
}

input MaintenanceRelationFilter {
  is: MaintenanceWhereInput
  isNot: MaintenanceWhereInput
}

input MachinesRelationFilter {
  is: MachinesWhereInput
  isNot: MachinesWhereInput
}

input MachinesWhereInput {
  AND: [MachinesWhereInput!]
  OR: [MachinesWhereInput!]
  NOT: [MachinesWhereInput!]
  id: BigIntFilter
  name: StringFilter
  section_id: BigIntFilter
  label: StringFilter
  profile: JsonFilter
  priority: IntFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  machine_catagory_id: BigIntFilter
  section: SectionsRelationFilter
  maintenance: MaintenanceListRelationFilter
  Ticket: TicketListRelationFilter
  machine_catagory: Machine_catagoryRelationFilter
  routine_maintanances: Routine_maintanancesListRelationFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input SectionsRelationFilter {
  is: SectionsWhereInput
  isNot: SectionsWhereInput
}

input SectionsWhereInput {
  AND: [SectionsWhereInput!]
  OR: [SectionsWhereInput!]
  NOT: [SectionsWhereInput!]
  id: BigIntFilter
  name: StringFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  machines: MachinesListRelationFilter
}

input MachinesListRelationFilter {
  every: MachinesWhereInput
  some: MachinesWhereInput
  none: MachinesWhereInput
}

input Machine_catagoryRelationFilter {
  is: machine_catagoryWhereInput
  isNot: machine_catagoryWhereInput
}

input machine_catagoryWhereInput {
  AND: [machine_catagoryWhereInput!]
  OR: [machine_catagoryWhereInput!]
  NOT: [machine_catagoryWhereInput!]
  id: BigIntFilter
  name: StringFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  machines: MachinesListRelationFilter
}

input Routine_maintanancesListRelationFilter {
  every: routine_maintanancesWhereInput
  some: routine_maintanancesWhereInput
  none: routine_maintanancesWhereInput
}

input routine_maintanancesWhereInput {
  AND: [routine_maintanancesWhereInput!]
  OR: [routine_maintanancesWhereInput!]
  NOT: [routine_maintanancesWhereInput!]
  id: BigIntFilter
  name: StringFilter
  description: StringFilter
  cron: StringFilter
  duration: IntFilter
  assignee_id: BigIntFilter
  meachine_id: BigIntFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  assignee: UsersRelationFilter
  meachine: MachinesRelationFilter
}

input Production_dataListRelationFilter {
  every: production_dataWhereInput
  some: production_dataWhereInput
  none: production_dataWhereInput
}

input production_dataWhereInput {
  AND: [production_dataWhereInput!]
  OR: [production_dataWhereInput!]
  NOT: [production_dataWhereInput!]
  id: BigIntFilter
  production: JsonFilter
  shift: StringFilter
  date: DateTimeFilter
  updated_by: BigIntFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  updatedBy: UsersRelationFilter
}

input ReplacementsListRelationFilter {
  every: ReplacementsWhereInput
  some: ReplacementsWhereInput
  none: ReplacementsWhereInput
}

input ReplacementsWhereInput {
  AND: [ReplacementsWhereInput!]
  OR: [ReplacementsWhereInput!]
  NOT: [ReplacementsWhereInput!]
  id: BigIntFilter
  name: StringFilter
  description: StringFilter
  quantity: IntFilter
  metadata: JsonFilter
  item_id: BigIntFilter
  maintanance_id: BigIntFilter
  created_at: DateTimeFilter
  approved: BoolFilter
  updated_at: DateTimeFilter
  items: ItemsRelationFilter
  maintenance: MaintenanceRelationFilter
}

input ItemsRelationFilter {
  is: ItemsWhereInput
  isNot: ItemsWhereInput
}

input ItemsWhereInput {
  AND: [ItemsWhereInput!]
  OR: [ItemsWhereInput!]
  NOT: [ItemsWhereInput!]
  id: BigIntFilter
  name: StringFilter
  code: StringFilter
  quantity: IntFilter
  unit_price: FloatFilter
  catagory_id: BigIntFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  catagory: CatagoryRelationFilter
  replacements: ReplacementsListRelationFilter
}

input FloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

input NestedFloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

input CatagoryRelationFilter {
  is: catagoryWhereInput
  isNot: catagoryWhereInput
}

input catagoryWhereInput {
  AND: [catagoryWhereInput!]
  OR: [catagoryWhereInput!]
  NOT: [catagoryWhereInput!]
  id: BigIntFilter
  name: StringFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  items: ItemsListRelationFilter
}

input ItemsListRelationFilter {
  every: ItemsWhereInput
  some: ItemsWhereInput
  none: ItemsWhereInput
}

input ReportsListRelationFilter {
  every: ReportsWhereInput
  some: ReportsWhereInput
  none: ReportsWhereInput
}

input ReportsWhereInput {
  AND: [ReportsWhereInput!]
  OR: [ReportsWhereInput!]
  NOT: [ReportsWhereInput!]
  id: BigIntFilter
  report: StringFilter
  sign: StringFilter
  tag: JsonFilter
  validated: BigIntFilter
  validated_sign: BigIntFilter
  maintance_id: BigIntFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  maintenance: MaintenanceRelationFilter
}

input TicketRelationFilter {
  is: TicketWhereInput
  isNot: TicketWhereInput
}

input MaintenanceOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  description: SortOrder
  from: SortOrder
  to: SortOrder
  resolved: SortOrder
  metadata: SortOrder
  un_planned: SortOrder
  elapsed: SortOrder
  assignee_id: SortOrder
  assignee: UsersOrderByWithRelationInput
  machine_id: SortOrder
  machines: MachinesOrderByWithRelationInput
  replacements: ReplacementsOrderByRelationAggregateInput
  reports: ReportsOrderByRelationAggregateInput
  created_at: SortOrder
  updated_at: SortOrder
  ticket: TicketOrderByWithRelationInput
}

enum SortOrder {
  asc
  desc
}

input UsersOrderByWithRelationInput {
  id: SortOrder
  profile: SortOrder
  email: SortOrder
  phone: SortOrder
  user_auth_id: SortOrder
  name: SortOrder
  maintenance: MaintenanceOrderByRelationAggregateInput
  created_at: SortOrder
  updated_at: SortOrder
  role: SortOrder
  ticket: TicketOrderByRelationAggregateInput
}

input MaintenanceOrderByRelationAggregateInput {
  _count: SortOrder
}

input TicketOrderByRelationAggregateInput {
  _count: SortOrder
}

input MachinesOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  section_id: SortOrder
  block_id: SortOrder
  label: SortOrder
  profile: SortOrder
  priority: SortOrder
  block: BlockOrderByWithRelationInput
  section: SectionsOrderByWithRelationInput
  maintenance: MaintenanceOrderByRelationAggregateInput
  created_at: SortOrder
  updated_at: SortOrder
  Ticket: TicketOrderByRelationAggregateInput
}

input BlockOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  location: SortOrder
  machines: MachinesOrderByRelationAggregateInput
  created_at: SortOrder
  updated_at: SortOrder
}

input MachinesOrderByRelationAggregateInput {
  _count: SortOrder
}

input SectionsOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  machines: MachinesOrderByRelationAggregateInput
  created_at: SortOrder
  updated_at: SortOrder
}

input ReplacementsOrderByRelationAggregateInput {
  _count: SortOrder
}

input ReportsOrderByRelationAggregateInput {
  _count: SortOrder
}

input TicketOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  description: SortOrder
  photos: SortOrder
  maintenance_id: SortOrder
  maintenance: MaintenanceOrderByWithRelationInput
  machine_id: SortOrder
  machines: MachinesOrderByWithRelationInput
  status: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

type CatagoryCount {
  items: Int!
}

type catagory {
  id: BigInt!
  name: String!
  created_at: DateTime!
  block_id: BigInt!
  updated_at: DateTime!
  items: [Items!]
  block: Block!
  _count: CatagoryCount!
}

type ItemsCount {
  replacements: Int!
}

type Items {
  id: BigInt!
  name: String!
  code: String!
  quantity: Int!
  unit_price: Float!
  catagory_id: BigInt!
  created_at: DateTime!
  updated_at: DateTime!
  block_id: BigInt!
  catagory: catagory!
  replacements(where: ReplacementsWhereInput, orderBy: ReplacementsOrderByWithRelationInput, limit: Int, offset: Int): [Replacements!]
  block: Block!
  _count: ItemsCount!
}

input ReplacementsOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  description: SortOrder
  quantity: SortOrder
  metadata: SortOrder
  item_id: SortOrder
  items: ItemsOrderByWithRelationInput
  maintanance_id: SortOrder
  maintenance: MaintenanceOrderByWithRelationInput
  created_at: SortOrder
  approved: SortOrder
  updated_at: SortOrder
}

input ItemsOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  code: SortOrder
  quantity: SortOrder
  unit_price: SortOrder
  catagory_id: SortOrder
  catagory: catagoryOrderByWithRelationInput
  replacements: ReplacementsOrderByRelationAggregateInput
  created_at: SortOrder
  updated_at: SortOrder
}

input catagoryOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  items: ItemsOrderByRelationAggregateInput
  created_at: SortOrder
  updated_at: SortOrder
}

input ItemsOrderByRelationAggregateInput {
  _count: SortOrder
}

type Replacements {
  id: BigInt!
  name: String!
  description: String!
  quantity: Int!
  metadata: JSON!
  item_id: BigInt!
  maintanance_id: BigInt!
  created_at: DateTime!
  approved: Boolean!
  updated_at: DateTime!
  block_id: BigInt!
  items: Items!
  maintenance: Maintenance!
  block: Block!
  item: Items!
}

type Reports {
  id: BigInt!
  report: String!
  sign: String!
  tag: JSON!
  validated: BigInt!
  validated_sign: BigInt!
  maintance_id: BigInt!
  created_at: DateTime!
  updated_at: DateTime!
  block_id: BigInt!
  maintenance: Maintenance!
  block: Block!
}

type MaintenanceCount {
  replacements: Int!
  reports: Int!
}

type Maintenance {
  id: BigInt!
  name: String!
  photo: String
  description: String!
  from: DateTime!
  to: DateTime!
  resolved: Boolean!
  metadata: JSON!
  un_planned: Boolean!
  elapsed: DateTime
  assignee_id: BigInt!
  machine_id: BigInt!
  created_at: DateTime!
  updated_at: DateTime!
  block_id: BigInt!
  assignee: Users!
  machines: Machines!
  replacements: [Replacements!]
  reports: [Reports!]
  ticket: Ticket
  block: Block!
  _count: MaintenanceCount!
  machine: Machines!
  assigned: Boolean
}

type Machine_catagoryCount {
  machines: Int!
}

type machine_catagory {
  id: BigInt!
  name: String!
  block_id: BigInt!
  created_at: DateTime!
  updated_at: DateTime!
  machines(where: MachinesWhereInput, orderBy: MachinesOrderByWithRelationInput, skip: Int, take: Int): [Machines!]
  block: Block!
  _count: Machine_catagoryCount!
}

type MachinesCount {
  maintenance: Int!
  Ticket: Int!
  routine_maintanances: Int!
}

type Machines {
  id: BigInt!
  name: String!
  section_id: BigInt!
  block_id: BigInt!
  label: String!
  profile: JSON!
  priority: Int!
  created_at: DateTime!
  updated_at: DateTime!
  machine_catagory_id: BigInt!
  block: Block!
  section: Sections!
  maintenance(where: MaintenanceWhereInput, orderBy: MaintenanceOrderByWithRelationInput, limit: Int, offset: Int): [Maintenance!]
  Ticket: [Ticket!]
  machine_catagory: machine_catagory!
  routine_maintanances: [routine_maintanances!]
  _count: MachinesCount!
}

type block_settings {
  id: BigInt!
  block_id: BigInt!
  name: String!
  value: JSON!
  created_at: DateTime!
  updated_at: DateTime!
  block: Block!
}

type Block {
  id: BigInt!
  name: String!
  location: String!
  Mailings: [String!]
  created_at: DateTime!
  updated_at: DateTime!
  machines(where: MachinesWhereInput, orderBy: MachinesOrderByWithAggregationInput, limit: Int, offset: Int): [Machines!]
  Users: [Users!]
  block_settings: [block_settings!]
  production_data: [production_data!]
  catagory: [catagory!]
  Items: [Items!]
  machine_catagory: [machine_catagory!]
  Maintenance: [Maintenance!]
  Replacements: [Replacements!]
  Reports: [Reports!]
  Sections: [Sections!]
  Ticket: [Ticket!]
  routine_maintanances: [routine_maintanances!]
  _count: BlockCount!
}

input MachinesOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  section_id: SortOrder
  label: SortOrder
  profile: SortOrder
  priority: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
  machine_catagory_id: SortOrder
  _count: MachinesCountOrderByAggregateInput
  _avg: MachinesAvgOrderByAggregateInput
  _max: MachinesMaxOrderByAggregateInput
  _min: MachinesMinOrderByAggregateInput
  _sum: MachinesSumOrderByAggregateInput
}

input MachinesCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  section_id: SortOrder
  label: SortOrder
  profile: SortOrder
  priority: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
  machine_catagory_id: SortOrder
}

input MachinesAvgOrderByAggregateInput {
  id: SortOrder
  section_id: SortOrder
  priority: SortOrder
  machine_catagory_id: SortOrder
}

input MachinesMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  section_id: SortOrder
  label: SortOrder
  priority: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
  machine_catagory_id: SortOrder
}

input MachinesMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  section_id: SortOrder
  label: SortOrder
  priority: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
  machine_catagory_id: SortOrder
}

input MachinesSumOrderByAggregateInput {
  id: SortOrder
  section_id: SortOrder
  priority: SortOrder
  machine_catagory_id: SortOrder
}

type MachinesCountAggregate {
  id: Int!
  name: Int!
  section_id: Int!
  block_id: Int!
  label: Int!
  profile: Int!
  priority: Int!
  created_at: Int!
  updated_at: Int!
  machine_catagory_id: Int!
  _all: Int!
}

type MachinesAvgAggregate {
  id: Float
  section_id: Float
  block_id: Float
  priority: Float
  machine_catagory_id: Float
}

type MachinesSumAggregate {
  id: BigInt
  section_id: BigInt
  block_id: BigInt
  priority: Int
  machine_catagory_id: BigInt
}

type MachinesMinAggregate {
  id: BigInt
  name: String
  section_id: BigInt
  block_id: BigInt
  label: String
  priority: Int
  created_at: DateTime
  updated_at: DateTime
  machine_catagory_id: BigInt
}

type MachinesMaxAggregate {
  id: BigInt
  name: String
  section_id: BigInt
  block_id: BigInt
  label: String
  priority: Int
  created_at: DateTime
  updated_at: DateTime
  machine_catagory_id: BigInt
}

type Machines_itemsCountAggregate {
  id: Int!
  machine_id: Int!
  item_id: Int!
  block_id: Int!
  _all: Int!
}

type Machines_itemsAvgAggregate {
  id: Float
  machine_id: Float
  item_id: Float
  block_id: Float
}

type Machines_itemsSumAggregate {
  id: BigInt
  machine_id: BigInt
  item_id: BigInt
  block_id: BigInt
}

type Machines_itemsMinAggregate {
  id: BigInt
  machine_id: BigInt
  item_id: BigInt
  block_id: BigInt
}

type Machines_itemsMaxAggregate {
  id: BigInt
  machine_id: BigInt
  item_id: BigInt
  block_id: BigInt
}

type ItemCatagoryCountAggregate {
  id: Int!
  name: Int!
  created_at: Int!
  updated_at: Int!
  _all: Int!
}

type ItemCatagoryAvgAggregate {
  id: Float
}

type ItemCatagorySumAggregate {
  id: String
}

type ItemCatagoryMinAggregate {
  id: String
  name: String
  created_at: DateTime
  updated_at: DateTime
}

type ItemCatagoryMaxAggregate {
  id: String
  name: String
  created_at: DateTime
  updated_at: DateTime
}

type ItemCatagoryCount {
  items: Int!
}

type ItemCatagory {
  id: ID!
  name: String!
  items(where: ItemsWhereInput, orderBy: ItemsOrderByWithAggregationInput, limit: Int, offset: Int): [Items!]
  created_at: DateTime!
  updated_at: DateTime!
  _count: CatagoryCount!
}

input ItemsOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  code: SortOrder
  quantity: SortOrder
  unit_price: SortOrder
  catagory_id: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
  _count: ItemsCountOrderByAggregateInput
  _avg: ItemsAvgOrderByAggregateInput
  _max: ItemsMaxOrderByAggregateInput
  _min: ItemsMinOrderByAggregateInput
  _sum: ItemsSumOrderByAggregateInput
}

input ItemsCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  code: SortOrder
  quantity: SortOrder
  unit_price: SortOrder
  catagory_id: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

input ItemsAvgOrderByAggregateInput {
  id: SortOrder
  quantity: SortOrder
  unit_price: SortOrder
  catagory_id: SortOrder
}

input ItemsMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  code: SortOrder
  quantity: SortOrder
  unit_price: SortOrder
  catagory_id: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

input ItemsMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  code: SortOrder
  quantity: SortOrder
  unit_price: SortOrder
  catagory_id: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

input ItemsSumOrderByAggregateInput {
  id: SortOrder
  quantity: SortOrder
  unit_price: SortOrder
  catagory_id: SortOrder
}

type ItemsCountAggregate {
  id: Int!
  name: Int!
  code: Int!
  quantity: Int!
  unit_price: Int!
  catagory_id: Int!
  created_at: Int!
  updated_at: Int!
  block_id: Int!
  _all: Int!
}

type ItemsAvgAggregate {
  id: Float
  quantity: Float
  unit_price: Float
  catagory_id: Float
  block_id: Float
}

type ItemsSumAggregate {
  id: BigInt
  quantity: Int
  unit_price: Float
  catagory_id: BigInt
  block_id: BigInt
}

type ItemsMinAggregate {
  id: BigInt
  name: String
  code: String
  quantity: Int
  unit_price: Float
  catagory_id: BigInt
  created_at: DateTime
  updated_at: DateTime
  block_id: BigInt
}

type ItemsMaxAggregate {
  id: BigInt
  name: String
  code: String
  quantity: Int
  unit_price: Float
  catagory_id: BigInt
  created_at: DateTime
  updated_at: DateTime
  block_id: BigInt
}

type Block_settingsCountAggregate {
  id: Int!
  block_id: Int!
  name: Int!
  value: Int!
  created_at: Int!
  updated_at: Int!
  _all: Int!
}

type CatagoryCountAggregate {
  id: Int!
  name: Int!
  created_at: Int!
  block_id: Int!
  updated_at: Int!
  _all: Int!
}

type CatagoryAvgAggregate {
  id: Float
  block_id: Float
}

type CatagorySumAggregate {
  id: BigInt
  block_id: BigInt
}

type CatagoryMinAggregate {
  id: BigInt
  name: String
  created_at: DateTime
  block_id: BigInt
  updated_at: DateTime
}

type CatagoryMaxAggregate {
  id: BigInt
  name: String
  created_at: DateTime
  block_id: BigInt
  updated_at: DateTime
}

type Machine_catagoryCountAggregate {
  id: Int!
  name: Int!
  block_id: Int!
  created_at: Int!
  updated_at: Int!
  _all: Int!
}

type Machine_catagoryAvgAggregate {
  id: Float
  block_id: Float
}

type Machine_catagorySumAggregate {
  id: BigInt
  block_id: BigInt
}

type Machine_catagoryMinAggregate {
  id: BigInt
  name: String
  block_id: BigInt
  created_at: DateTime
  updated_at: DateTime
}

type Machine_catagoryMaxAggregate {
  id: BigInt
  name: String
  block_id: BigInt
  created_at: DateTime
  updated_at: DateTime
}

type Production_dataCountAggregate {
  id: Int!
  production: Int!
  shift: Int!
  date: Int!
  updated_by: Int!
  created_at: Int!
  updated_at: Int!
  blockId: Int!
  _all: Int!
}

type Production_dataAvgAggregate {
  id: Float
  updated_by: Float
  blockId: Float
}

type Production_dataSumAggregate {
  id: BigInt
  updated_by: BigInt
  blockId: BigInt
}

type Production_dataMinAggregate {
  id: BigInt
  shift: String
  date: DateTime
  updated_by: BigInt
  created_at: DateTime
  updated_at: DateTime
  blockId: BigInt
}

type Production_dataMaxAggregate {
  id: BigInt
  shift: String
  date: DateTime
  updated_by: BigInt
  created_at: DateTime
  updated_at: DateTime
  blockId: BigInt
}

type Routine_maintanancesCountAggregate {
  id: Int!
  name: Int!
  description: Int!
  cron: Int!
  duration: Int!
  assignee_id: Int!
  meachine_id: Int!
  created_at: Int!
  updated_at: Int!
  block_id: Int!
  _all: Int!
}

type Routine_maintanancesAvgAggregate {
  id: Float
  duration: Float
  assignee_id: Float
  meachine_id: Float
  block_id: Float
}

type Routine_maintanancesSumAggregate {
  id: BigInt
  duration: Int
  assignee_id: BigInt
  meachine_id: BigInt
  block_id: BigInt
}

type Routine_maintanancesMinAggregate {
  id: BigInt
  name: String
  description: String
  cron: String
  duration: Int
  assignee_id: BigInt
  meachine_id: BigInt
  created_at: DateTime
  updated_at: DateTime
  block_id: BigInt
}

type Routine_maintanancesMaxAggregate {
  id: BigInt
  name: String
  description: String
  cron: String
  duration: Int
  assignee_id: BigInt
  meachine_id: BigInt
  created_at: DateTime
  updated_at: DateTime
  block_id: BigInt
}

type ReplacementsCountAggregate {
  id: Int!
  name: Int!
  description: Int!
  quantity: Int!
  metadata: Int!
  item_id: Int!
  maintanance_id: Int!
  created_at: Int!
  approved: Int!
  updated_at: Int!
  block_id: Int!
  _all: Int!
}

type ReplacementsAvgAggregate {
  id: Float
  quantity: Float
  item_id: Float
  maintanance_id: Float
  block_id: Float
}

type ReplacementsSumAggregate {
  id: BigInt
  quantity: Int
  item_id: BigInt
  maintanance_id: BigInt
  block_id: BigInt
}

type ReplacementsMinAggregate {
  id: BigInt
  name: String
  description: String
  quantity: Int
  item_id: BigInt
  maintanance_id: BigInt
  created_at: DateTime
  approved: Boolean
  updated_at: DateTime
  block_id: BigInt
}

type ReplacementsMaxAggregate {
  id: BigInt
  name: String
  description: String
  quantity: Int
  item_id: BigInt
  maintanance_id: BigInt
  created_at: DateTime
  approved: Boolean
  updated_at: DateTime
  block_id: BigInt
}

type MaintenanceCountAggregate {
  id: Int!
  name: Int!
  photo: Int!
  description: Int!
  from: Int!
  to: Int!
  resolved: Int!
  metadata: Int!
  un_planned: Int!
  elapsed: Int!
  assignee_id: Int!
  machine_id: Int!
  created_at: Int!
  updated_at: Int!
  block_id: Int!
  _all: Int!
}

type MaintenanceAvgAggregate {
  id: Float
  assignee_id: Float
  machine_id: Float
  block_id: Float
}

type MaintenanceSumAggregate {
  id: BigInt
  assignee_id: BigInt
  machine_id: BigInt
  block_id: BigInt
}

type MaintenanceMinAggregate {
  id: BigInt
  name: String
  photo: String
  description: String
  from: DateTime
  to: DateTime
  resolved: Boolean
  un_planned: Boolean
  elapsed: DateTime
  assignee_id: BigInt
  machine_id: BigInt
  created_at: DateTime
  updated_at: DateTime
  block_id: BigInt
}

type MaintenanceMaxAggregate {
  id: BigInt
  name: String
  photo: String
  description: String
  from: DateTime
  to: DateTime
  resolved: Boolean
  un_planned: Boolean
  elapsed: DateTime
  assignee_id: BigInt
  machine_id: BigInt
  created_at: DateTime
  updated_at: DateTime
  block_id: BigInt
}

type UsersCountAggregate {
  id: Int!
  profile: Int!
  phone: Int!
  name: Int!
  blockId: Int!
  created_at: Int!
  updated_at: Int!
  role: Int!
  extra_roles: Int!
  role_alias: Int!
  _all: Int!
}

type UsersAvgAggregate {
  id: Float
  blockId: Float
}

type UsersSumAggregate {
  id: BigInt
  blockId: BigInt
}

type UsersMinAggregate {
  id: BigInt
  phone: String
  name: String
  blockId: BigInt
  created_at: DateTime
  updated_at: DateTime
  role: Role
  role_alias: String
}

type UsersMaxAggregate {
  id: BigInt
  phone: String
  name: String
  blockId: BigInt
  created_at: DateTime
  updated_at: DateTime
  role: Role
  role_alias: String
}

type ReportsCountAggregate {
  id: Int!
  report: Int!
  sign: Int!
  tag: Int!
  validated: Int!
  validated_sign: Int!
  maintance_id: Int!
  created_at: Int!
  updated_at: Int!
  block_id: Int!
  _all: Int!
}

type ReportsAvgAggregate {
  id: Float
  validated: Float
  validated_sign: Float
  maintance_id: Float
  block_id: Float
}

type ReportsSumAggregate {
  id: BigInt
  validated: BigInt
  validated_sign: BigInt
  maintance_id: BigInt
  block_id: BigInt
}

type ReportsMinAggregate {
  id: BigInt
  report: String
  sign: String
  validated: BigInt
  validated_sign: BigInt
  maintance_id: BigInt
  created_at: DateTime
  updated_at: DateTime
  block_id: BigInt
}

type ReportsMaxAggregate {
  id: BigInt
  report: String
  sign: String
  validated: BigInt
  validated_sign: BigInt
  maintance_id: BigInt
  created_at: DateTime
  updated_at: DateTime
  block_id: BigInt
}

type TicketCountAggregate {
  id: Int!
  name: Int!
  description: Int!
  photos: Int!
  user_id: Int!
  maintenance_id: Int!
  machine_id: Int!
  status: Int!
  created_at: Int!
  updated_at: Int!
  block_id: Int!
  _all: Int!
}

type TicketAvgAggregate {
  id: Float
  user_id: Float
  maintenance_id: Float
  machine_id: Float
  block_id: Float
}

type TicketSumAggregate {
  id: BigInt
  user_id: BigInt
  maintenance_id: BigInt
  machine_id: BigInt
  block_id: BigInt
}

type TicketMinAggregate {
  id: BigInt
  name: String
  description: String
  photos: String
  user_id: BigInt
  maintenance_id: BigInt
  machine_id: BigInt
  status: ticket_status
  created_at: DateTime
  updated_at: DateTime
  block_id: BigInt
}

type TicketMaxAggregate {
  id: BigInt
  name: String
  description: String
  photos: String
  user_id: BigInt
  maintenance_id: BigInt
  machine_id: BigInt
  status: ticket_status
  created_at: DateTime
  updated_at: DateTime
  block_id: BigInt
}

type SectionCountAggregate {
  id: Int!
  name: Int!
  created_at: Int!
  updated_at: Int!
  _all: Int!
}

type SectionAvgAggregate {
  id: Float
}

type SectionSumAggregate {
  id: String
}

type SectionMinAggregate {
  id: String
  name: String
  created_at: DateTime
  updated_at: DateTime
}

type SectionMaxAggregate {
  id: String
  name: String
  created_at: DateTime
  updated_at: DateTime
}

type SectionCount {
  machines: Int!
}

type Section {
  id: ID!
  name: String!
  machines(where: MachinesWhereInput, orderBy: MachinesOrderByWithRelationInput, skip: Int, take: Int): [Machines!]
  created_at: DateTime!
  updated_at: DateTime!
  _count: SectionCount!
}

type Query {
  blocks(limit: Int, offset: Int, where: BlockWhereInput, orderBy: BlockOrderByWithAggregationInput): [Block!]!
  blocksCount(limit: Int, offset: Int, where: BlockWhereInput, orderBy: BlockOrderByWithAggregationInput): Int!
  block(id: Int!): Block!
  itemCatagories(limit: Int, offset: Int, orderBy: ItemCatagoryOrderByWithAggregationInput, where: ItemCatagoryWhereInput): [ItemCatagory!]!
  itemCatagoriesCount(limit: Int, offset: Int, orderBy: ItemCatagoryOrderByWithAggregationInput, where: ItemCatagoryWhereInput): Int!
  itemCatagory(id: Int!): ItemCatagory!
  items(where: ItemsWhereInput, orderBy: ItemsOrderByWithRelationInput, limit: Int, offset: Int): [Items!]!
  itemsCount(where: ItemsWhereInput, orderBy: ItemsOrderByWithRelationInput, limit: Int, offset: Int): Int!
  item(id: Int!): Items!
  machines(where: MachinesWhereInput, orderBy: MachinesOrderByWithRelationInput, limit: Int, offset: Int): [Machines!]!
  machinesCount(where: MachinesWhereInput, orderBy: MachinesOrderByWithRelationInput, limit: Int, offset: Int): Int!
  machine(id: Int!): Machines!
  maintenances(limit: Int, offset: Int, orderBy: MaintenanceOrderByWithRelationInput, where: MaintenanceWhereInput): [Maintenance!]!
  maintenanceCount(limit: Int, offset: Int, orderBy: MaintenanceOrderByWithRelationInput, where: MaintenanceWhereInput): Int!
  maintenance(id: Int!): Maintenance!
  replacements(where: ReplacementsWhereInput, orderBy: ReplacementsOrderByWithRelationInput, limit: Int, offset: Int): [Replacements!]!
  replacementsCount(where: ReplacementsWhereInput, orderBy: ReplacementsOrderByWithRelationInput, limit: Int, offset: Int): Int!
  replacement(id: Int!): Replacements!
  machineCatagories(where: machine_catagoryWhereInput, orderBy: machine_catagoryOrderByWithRelationAndSearchRelevanceInput, skip: Int, take: Int): [machine_catagory!]!
  machineCatagoriesCount(where: machine_catagoryWhereInput, orderBy: machine_catagoryOrderByWithRelationAndSearchRelevanceInput, skip: Int, take: Int): Int!
  machineCategory(id: Int!): machine_catagory!
  report(id: Int!): Reports!
  sections(where: SectionWhereInput, orderBy: SectionOrderByWithRelationInput, skip: Int, take: Int): [Section!]!
  sectionsCount(where: SectionWhereInput, orderBy: SectionOrderByWithRelationInput, skip: Int, take: Int): Int!
  section(id: Int!): Section!
  users(where: UsersWhereInput, orderBy: UsersOrderByWithRelationInput, limit: Int, offset: Int): [Users!]!
  usersCount(where: UsersWhereInput, orderBy: UsersOrderByWithRelationInput, limit: Int, offset: Int): Int!
  user(id: Int!): Users!
  ticketsCount(where: TicketWhereInput, orderBy: TicketOrderByWithRelationInput, skip: Float, take: Float): Int!
  tickets(where: TicketWhereInput, orderBy: TicketOrderByWithRelationInput, skip: Float, take: Float): [Ticket!]!
  ticket(id: Int!): Ticket!
  productionData(limit: Int, offset: Int, where: production_dataWhereInput, orderBy: production_dataOrderByWithAggregationInput): [production_data!]!
  productionDataCount(limit: Int, offset: Int, where: production_dataWhereInput, orderBy: production_dataOrderByWithAggregationInput): Int!
  production(id: Int!): production_data!
  routineMaintanances(limit: Int, offset: Int, where: routine_maintanancesWhereInput, orderBy: routine_maintanancesSumOrderByAggregateInput): [routine_maintanances!]!
  routineMaintanancesCount(limit: Int, offset: Int, where: routine_maintanancesWhereInput, orderBy: routine_maintanancesSumOrderByAggregateInput): Int!
  routineMaintanance(id: Int!): routine_maintanances!
}

input BlockWhereInput {
  AND: [BlockWhereInput!]
  OR: [BlockWhereInput!]
  NOT: [BlockWhereInput!]
  id: BigIntFilter
  name: StringFilter
  location: StringFilter
  Mailings: StringNullableListFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  machines: MachinesListRelationFilter
  Users: UsersListRelationFilter
  block_settings: Block_settingsListRelationFilter
  production_data: Production_dataListRelationFilter
  catagory: CatagoryListRelationFilter
  Items: ItemsListRelationFilter
  machine_catagory: Machine_catagoryListRelationFilter
  Maintenance: MaintenanceListRelationFilter
  Replacements: ReplacementsListRelationFilter
  Reports: ReportsListRelationFilter
  Sections: SectionsListRelationFilter
  Ticket: TicketListRelationFilter
  routine_maintanances: Routine_maintanancesListRelationFilter
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

input UsersListRelationFilter {
  every: UsersWhereInput
  some: UsersWhereInput
  none: UsersWhereInput
}

input Block_settingsListRelationFilter {
  every: block_settingsWhereInput
  some: block_settingsWhereInput
  none: block_settingsWhereInput
}

input block_settingsWhereInput {
  AND: [block_settingsWhereInput!]
  OR: [block_settingsWhereInput!]
  NOT: [block_settingsWhereInput!]
  id: BigIntFilter
  block_id: BigIntFilter
  name: StringFilter
  value: JsonFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  block: BlockRelationFilter
}

input BlockRelationFilter {
  is: BlockWhereInput
  isNot: BlockWhereInput
}

input CatagoryListRelationFilter {
  every: catagoryWhereInput
  some: catagoryWhereInput
  none: catagoryWhereInput
}

input Machine_catagoryListRelationFilter {
  every: machine_catagoryWhereInput
  some: machine_catagoryWhereInput
  none: machine_catagoryWhereInput
}

input SectionsListRelationFilter {
  every: SectionsWhereInput
  some: SectionsWhereInput
  none: SectionsWhereInput
}

input BlockOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  location: SortOrder
  Mailings: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
  _count: BlockCountOrderByAggregateInput
  _avg: BlockAvgOrderByAggregateInput
  _max: BlockMaxOrderByAggregateInput
  _min: BlockMinOrderByAggregateInput
  _sum: BlockSumOrderByAggregateInput
}

input BlockCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  location: SortOrder
  Mailings: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

input BlockAvgOrderByAggregateInput {
  id: SortOrder
}

input BlockMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  location: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

input BlockMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  location: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

input BlockSumOrderByAggregateInput {
  id: SortOrder
}

input ItemCatagoryOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
  _count: ItemCatagoryCountOrderByAggregateInput
  _avg: ItemCatagoryAvgOrderByAggregateInput
  _max: ItemCatagoryMaxOrderByAggregateInput
  _min: ItemCatagoryMinOrderByAggregateInput
  _sum: ItemCatagorySumOrderByAggregateInput
}

input ItemCatagoryCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

input ItemCatagoryAvgOrderByAggregateInput {
  id: SortOrder
}

input ItemCatagoryMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

input ItemCatagoryMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

input ItemCatagorySumOrderByAggregateInput {
  id: SortOrder
}

input ItemCatagoryWhereInput {
  AND: [ItemCatagoryWhereInput!]
  OR: [ItemCatagoryWhereInput!]
  NOT: [ItemCatagoryWhereInput!]
  id: BigIntFilter
  name: StringFilter
  items: ItemsListRelationFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
}

input machine_catagoryOrderByWithRelationAndSearchRelevanceInput {
  id: SortOrder
  name: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
  machines: MachinesOrderByRelationAggregateInput
  _relevance: machine_catagoryOrderByRelevanceInput
}

input machine_catagoryOrderByRelevanceInput {
  fields: [machine_catagoryOrderByRelevanceFieldEnum!]!
  sort: SortOrder!
  search: String!
}

enum machine_catagoryOrderByRelevanceFieldEnum {
  name
}

input SectionWhereInput {
  AND: [SectionWhereInput!]
  OR: [SectionWhereInput!]
  NOT: [SectionWhereInput!]
  id: BigIntFilter
  name: StringFilter
  machines: MachinesListRelationFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
}

input SectionOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  machines: MachinesOrderByRelationAggregateInput
  created_at: SortOrder
  updated_at: SortOrder
}

input production_dataOrderByWithAggregationInput {
  id: SortOrder
  production: SortOrder
  shift: SortOrder
  date: SortOrder
  updated_by: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
  _count: production_dataCountOrderByAggregateInput
  _avg: production_dataAvgOrderByAggregateInput
  _max: production_dataMaxOrderByAggregateInput
  _min: production_dataMinOrderByAggregateInput
  _sum: production_dataSumOrderByAggregateInput
}

input production_dataCountOrderByAggregateInput {
  id: SortOrder
  production: SortOrder
  shift: SortOrder
  date: SortOrder
  updated_by: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

input production_dataAvgOrderByAggregateInput {
  id: SortOrder
  updated_by: SortOrder
}

input production_dataMaxOrderByAggregateInput {
  id: SortOrder
  shift: SortOrder
  date: SortOrder
  updated_by: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

input production_dataMinOrderByAggregateInput {
  id: SortOrder
  shift: SortOrder
  date: SortOrder
  updated_by: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

input production_dataSumOrderByAggregateInput {
  id: SortOrder
  updated_by: SortOrder
}

input routine_maintanancesSumOrderByAggregateInput {
  id: SortOrder
  duration: SortOrder
  assignee_id: SortOrder
  meachine_id: SortOrder
}

type Mutation {
  createBlock(createBlockInput: BlockCreateInput!): Block!
  updateBlock(id: Int!, updateBlockInput: BlockUpdateInput!): Block!
  removeBlock(id: Int!): Block!
  createItemCatagory(createItemCatagoryInput: ItemCatagoryCreateInput!): ItemCatagory!
  updateItemCatagory(id: Int!, updateItemCatagoryInput: ItemCatagoryUpdateInput!): ItemCatagory!
  removeItemCatagory(id: Int!): ItemCatagory!
  createItem(createItemInput: ItemsCreateInput!): Items!
  updateItem(id: Int!, updateItemInput: ItemsUpdateInput!): Items!
  removeItem(id: Int!): Items!
  createMachine(createMachineInput: MachinesCreateInput!): Machines!
  updateMachine(id: Int!, updateMachineInput: MachinesUpdateInput!): Machines!
  removeMachine(id: Int!): Machines!
  createMaintanance(createMaintananceInput: MaintenanceCreateInput!): Maintenance!
  updateMaintanance(id: Int!, updateMaintananceInput: MaintenanceUpdateInput!): Maintenance!
  removeMaintanance(id: Int!): Maintenance!
  createReplacement(createReplacementInput: ReplacementsCreateInput!): Replacements!
  updateReplacement(id: Int!, updateReplacementInput: ReplacementsUpdateInput!): Replacements!
  removeReplacement(id: Int!): Replacements!
  createMachineCategory(createCategoryInput: machine_catagoryCreateWithoutMachinesInput!): machine_catagory!
  updateMachineCatagories(id: Int!, data: machine_catagoryUpdateOneWithoutMachinesNestedInput!): machine_catagory!
  removeMachineCatagories(id: Int!): machine_catagory!
  createReport(createReportInput: ReportsCreateInput!): Reports!
  updateReport(id: Int!, updateReportInput: ReportsUpdateInput!): Reports!
  removeReport(id: Int!): Reports!
  createSection(createSectionInput: SectionCreateWithoutMachinesInput!): Section!
  updateSection(id: Int!, updateSectionInput: SectionUpdateWithoutMachinesInput!): Section!
  removeSection(id: Int!): Section!
  createUser(createUserInput: UsersCreateInput!): Users!
  updateUser(id: Int!, updateUserInput: UsersUpdateInput!): Users!
  removeUser(id: Int!): Users!
  createTicket(createTicketInput: TicketCreateInput!): Ticket!
  updateTicket(id: Int!, updateTicketInput: TicketUpdateInput!): Ticket!
  removeTicket(id: Int!): Ticket!
  createProduction(createProductionInput: production_dataCreateInput!): production_data!
  updateProduction(id: Int!, updateProductionInput: production_dataUpdateInput!): production_data!
  removeProductionData(id: Int!): production_data!
  createRoutineMaintanance(createRoutineMaintananceInput: routine_maintanancesCreateInput!): routine_maintanances!
  updateRoutineMaintanance(id: Int!, updateRoutineMaintananceInput: routine_maintanancesUpdateInput!): routine_maintanances!
  removeRoutineMaintanance(id: Int!): routine_maintanances!
}

input BlockCreateInput {
  id: BigInt
  name: String!
  location: String!
  Mailings: BlockCreateMailingsInput
  created_at: DateTime
  updated_at: DateTime
  machines: MachinesCreateNestedManyWithoutBlockInput
  Users: UsersCreateNestedManyWithoutBlockInput
  block_settings: block_settingsCreateNestedManyWithoutBlockInput
  production_data: production_dataCreateNestedManyWithoutBlockInput
  catagory: catagoryCreateNestedManyWithoutBlockInput
  Items: ItemsCreateNestedManyWithoutBlockInput
  machine_catagory: machine_catagoryCreateNestedManyWithoutBlockInput
  Maintenance: MaintenanceCreateNestedManyWithoutBlockInput
  Replacements: ReplacementsCreateNestedManyWithoutBlockInput
  Reports: ReportsCreateNestedManyWithoutBlockInput
  Sections: SectionsCreateNestedManyWithoutBlockInput
  Ticket: TicketCreateNestedManyWithoutBlockInput
  routine_maintanances: routine_maintanancesCreateNestedManyWithoutBlockInput
}

input BlockCreateMailingsInput {
  set: [String!]!
}

input MachinesCreateNestedManyWithoutBlockInput {
  create: [MachinesCreateWithoutBlockInput!]
  connectOrCreate: [MachinesCreateOrConnectWithoutBlockInput!]
  createMany: MachinesCreateManyBlockInputEnvelope
  connect: [MachinesWhereUniqueInput!]
}

input MachinesCreateWithoutBlockInput {
  id: BigInt
  name: String!
  label: String!
  profile: JSON
  priority: Int!
  created_at: DateTime
  updated_at: DateTime
  section: SectionsCreateNestedOneWithoutMachinesInput!
  maintenance: MaintenanceCreateNestedManyWithoutMachinesInput
  Ticket: TicketCreateNestedManyWithoutMachinesInput
  machine_catagory: machine_catagoryCreateNestedOneWithoutMachinesInput!
  routine_maintanances: routine_maintanancesCreateNestedManyWithoutMeachineInput
}

input SectionsCreateNestedOneWithoutMachinesInput {
  create: SectionsCreateWithoutMachinesInput
  connectOrCreate: SectionsCreateOrConnectWithoutMachinesInput
  connect: SectionsWhereUniqueInput
}

input SectionsCreateWithoutMachinesInput {
  id: BigInt
  name: String!
  created_at: DateTime
  updated_at: DateTime
}

input SectionsCreateOrConnectWithoutMachinesInput {
  where: SectionsWhereUniqueInput!
  create: SectionsCreateWithoutMachinesInput!
}

input SectionsWhereUniqueInput {
  id: BigInt
}

input MaintenanceCreateNestedManyWithoutMachinesInput {
  create: [MaintenanceCreateWithoutMachinesInput!]
  connectOrCreate: [MaintenanceCreateOrConnectWithoutMachinesInput!]
  createMany: MaintenanceCreateManyMachinesInputEnvelope
  connect: [MaintenanceWhereUniqueInput!]
}

input MaintenanceCreateWithoutMachinesInput {
  id: BigInt
  name: String!
  photo: String
  description: String!
  from: DateTime!
  to: DateTime!
  resolved: Boolean!
  metadata: JSON
  un_planned: Boolean!
  elapsed: DateTime
  created_at: DateTime
  updated_at: DateTime
  assignee: UsersCreateNestedOneWithoutMaintenanceInput!
  replacements: ReplacementsCreateNestedManyWithoutMaintenanceInput
  reports: ReportsCreateNestedManyWithoutMaintenanceInput
  ticket: TicketCreateNestedOneWithoutMaintenanceInput
}

input UsersCreateNestedOneWithoutMaintenanceInput {
  create: UsersCreateWithoutMaintenanceInput
  connectOrCreate: UsersCreateOrConnectWithoutMaintenanceInput
  connect: UsersWhereUniqueInput
}

input UsersCreateWithoutMaintenanceInput {
  id: BigInt
  profile: JSON
  phone: String!
  name: String!
  created_at: DateTime
  updated_at: DateTime
  role: Role!
  extra_roles: UsersCreateextra_rolesInput
  role_alias: String
  ticket: TicketCreateNestedManyWithoutUserInput
  routine_maintanances: routine_maintanancesCreateNestedManyWithoutAssigneeInput
  production_data: production_dataCreateNestedManyWithoutUpdatedByInput
}

input UsersCreateextra_rolesInput {
  set: [Role!]!
}

input TicketCreateNestedManyWithoutUserInput {
  create: [TicketCreateWithoutUserInput!]
  connectOrCreate: [TicketCreateOrConnectWithoutUserInput!]
  createMany: TicketCreateManyUserInputEnvelope
  connect: [TicketWhereUniqueInput!]
}

input TicketCreateWithoutUserInput {
  id: BigInt
  name: String!
  description: String!
  photos: String!
  status: ticket_status!
  created_at: DateTime
  updated_at: DateTime
  maintenance: MaintenanceCreateNestedOneWithoutTicketInput
  machines: MachinesCreateNestedOneWithoutTicketInput!
}

input MaintenanceCreateNestedOneWithoutTicketInput {
  create: MaintenanceCreateWithoutTicketInput
  connectOrCreate: MaintenanceCreateOrConnectWithoutTicketInput
  connect: MaintenanceWhereUniqueInput
}

input MaintenanceCreateWithoutTicketInput {
  id: BigInt
  name: String!
  photo: String
  description: String!
  from: DateTime!
  to: DateTime!
  resolved: Boolean!
  metadata: JSON
  un_planned: Boolean!
  elapsed: DateTime
  created_at: DateTime
  updated_at: DateTime
  assignee: UsersCreateNestedOneWithoutMaintenanceInput!
  machines: MachinesCreateNestedOneWithoutMaintenanceInput!
  replacements: ReplacementsCreateNestedManyWithoutMaintenanceInput
  reports: ReportsCreateNestedManyWithoutMaintenanceInput
}

input MachinesCreateNestedOneWithoutMaintenanceInput {
  create: MachinesCreateWithoutMaintenanceInput
  connectOrCreate: MachinesCreateOrConnectWithoutMaintenanceInput
  connect: MachinesWhereUniqueInput
}

input MachinesCreateWithoutMaintenanceInput {
  id: BigInt
  name: String!
  label: String!
  profile: JSON
  priority: Int!
  created_at: DateTime
  updated_at: DateTime
  section: SectionsCreateNestedOneWithoutMachinesInput!
  Ticket: TicketCreateNestedManyWithoutMachinesInput
  machine_catagory: machine_catagoryCreateNestedOneWithoutMachinesInput!
  routine_maintanances: routine_maintanancesCreateNestedManyWithoutMeachineInput
}

input TicketCreateNestedManyWithoutMachinesInput {
  create: [TicketCreateWithoutMachinesInput!]
  connectOrCreate: [TicketCreateOrConnectWithoutMachinesInput!]
  createMany: TicketCreateManyMachinesInputEnvelope
  connect: [TicketWhereUniqueInput!]
}

input TicketCreateWithoutMachinesInput {
  id: BigInt
  name: String!
  description: String!
  photos: String!
  status: ticket_status!
  created_at: DateTime
  updated_at: DateTime
  maintenance: MaintenanceCreateNestedOneWithoutTicketInput
}

input TicketCreateOrConnectWithoutMachinesInput {
  where: TicketWhereUniqueInput!
  create: TicketCreateWithoutMachinesInput!
}

input TicketWhereUniqueInput {
  id: BigInt
  maintenance_id: BigInt
}

input TicketCreateManyMachinesInputEnvelope {
  data: [TicketCreateManyMachinesInput!]!
  skipDuplicates: Boolean
}

input TicketCreateManyMachinesInput {
  id: BigInt
  name: String!
  description: String!
  photos: String!
  maintenance_id: BigInt
  status: ticket_status!
  created_at: DateTime
  updated_at: DateTime
}

input machine_catagoryCreateNestedOneWithoutMachinesInput {
  create: machine_catagoryCreateWithoutMachinesInput
  connectOrCreate: machine_catagoryCreateOrConnectWithoutMachinesInput
  connect: machine_catagoryWhereUniqueInput
}

input machine_catagoryCreateWithoutMachinesInput {
  id: BigInt
  name: String!
  created_at: DateTime
  updated_at: DateTime
}

input machine_catagoryCreateOrConnectWithoutMachinesInput {
  where: machine_catagoryWhereUniqueInput!
  create: machine_catagoryCreateWithoutMachinesInput!
}

input machine_catagoryWhereUniqueInput {
  id: BigInt
}

input routine_maintanancesCreateNestedManyWithoutMeachineInput {
  create: [routine_maintanancesCreateWithoutMeachineInput!]
  connectOrCreate: [routine_maintanancesCreateOrConnectWithoutMeachineInput!]
  createMany: routine_maintanancesCreateManyMeachineInputEnvelope
  connect: [routine_maintanancesWhereUniqueInput!]
}

input routine_maintanancesCreateWithoutMeachineInput {
  id: BigInt
  name: String!
  description: String!
  cron: String!
  duration: Int!
  created_at: DateTime
  updated_at: DateTime
  assignee: UsersCreateNestedOneWithoutRoutine_maintanancesInput!
}

input UsersCreateNestedOneWithoutRoutine_maintanancesInput {
  create: UsersCreateWithoutRoutine_maintanancesInput
  connectOrCreate: UsersCreateOrConnectWithoutRoutine_maintanancesInput
  connect: UsersWhereUniqueInput
}

input UsersCreateWithoutRoutine_maintanancesInput {
  id: BigInt
  profile: JSON
  phone: String!
  name: String!
  created_at: DateTime
  updated_at: DateTime
  role: Role!
  extra_roles: UsersCreateextra_rolesInput
  role_alias: String
  maintenance: MaintenanceCreateNestedManyWithoutAssigneeInput
  ticket: TicketCreateNestedManyWithoutUserInput
  production_data: production_dataCreateNestedManyWithoutUpdatedByInput
}

input MaintenanceCreateNestedManyWithoutAssigneeInput {
  create: [MaintenanceCreateWithoutAssigneeInput!]
  connectOrCreate: [MaintenanceCreateOrConnectWithoutAssigneeInput!]
  createMany: MaintenanceCreateManyAssigneeInputEnvelope
  connect: [MaintenanceWhereUniqueInput!]
}

input MaintenanceCreateWithoutAssigneeInput {
  id: BigInt
  name: String!
  photo: String
  description: String!
  from: DateTime!
  to: DateTime!
  resolved: Boolean!
  metadata: JSON
  un_planned: Boolean!
  elapsed: DateTime
  created_at: DateTime
  updated_at: DateTime
  machines: MachinesCreateNestedOneWithoutMaintenanceInput!
  replacements: ReplacementsCreateNestedManyWithoutMaintenanceInput
  reports: ReportsCreateNestedManyWithoutMaintenanceInput
  ticket: TicketCreateNestedOneWithoutMaintenanceInput
}

input ReplacementsCreateNestedManyWithoutMaintenanceInput {
  create: [ReplacementsCreateWithoutMaintenanceInput!]
  connectOrCreate: [ReplacementsCreateOrConnectWithoutMaintenanceInput!]
  createMany: ReplacementsCreateManyMaintenanceInputEnvelope
  connect: [ReplacementsWhereUniqueInput!]
}

input ReplacementsCreateWithoutMaintenanceInput {
  id: BigInt
  name: String!
  description: String!
  quantity: Int!
  metadata: JSON
  created_at: DateTime
  approved: Boolean
  updated_at: DateTime
  items: ItemsCreateNestedOneWithoutReplacementsInput!
}

input ItemsCreateNestedOneWithoutReplacementsInput {
  create: ItemsCreateWithoutReplacementsInput
  connectOrCreate: ItemsCreateOrConnectWithoutReplacementsInput
  connect: ItemsWhereUniqueInput
}

input ItemsCreateWithoutReplacementsInput {
  id: BigInt
  name: String!
  code: String!
  quantity: Int!
  unit_price: Float!
  created_at: DateTime
  updated_at: DateTime
  catagory: catagoryCreateNestedOneWithoutItemsInput!
}

input catagoryCreateNestedOneWithoutItemsInput {
  create: catagoryCreateWithoutItemsInput
  connectOrCreate: catagoryCreateOrConnectWithoutItemsInput
  connect: catagoryWhereUniqueInput
}

input catagoryCreateWithoutItemsInput {
  id: BigInt
  name: String!
  created_at: DateTime
  updated_at: DateTime
}

input catagoryCreateOrConnectWithoutItemsInput {
  where: catagoryWhereUniqueInput!
  create: catagoryCreateWithoutItemsInput!
}

input catagoryWhereUniqueInput {
  id: BigInt
}

input ItemsCreateOrConnectWithoutReplacementsInput {
  where: ItemsWhereUniqueInput!
  create: ItemsCreateWithoutReplacementsInput!
}

input ItemsWhereUniqueInput {
  id: BigInt
}

input ReplacementsCreateOrConnectWithoutMaintenanceInput {
  where: ReplacementsWhereUniqueInput!
  create: ReplacementsCreateWithoutMaintenanceInput!
}

input ReplacementsWhereUniqueInput {
  id: BigInt
}

input ReplacementsCreateManyMaintenanceInputEnvelope {
  data: [ReplacementsCreateManyMaintenanceInput!]!
  skipDuplicates: Boolean
}

input ReplacementsCreateManyMaintenanceInput {
  id: BigInt
  name: String!
  description: String!
  quantity: Int!
  metadata: JSON
  item_id: BigInt!
  created_at: DateTime
  approved: Boolean
  updated_at: DateTime
}

input ReportsCreateNestedManyWithoutMaintenanceInput {
  create: [ReportsCreateWithoutMaintenanceInput!]
  connectOrCreate: [ReportsCreateOrConnectWithoutMaintenanceInput!]
  createMany: ReportsCreateManyMaintenanceInputEnvelope
  connect: [ReportsWhereUniqueInput!]
}

input ReportsCreateWithoutMaintenanceInput {
  id: BigInt
  report: String!
  sign: String!
  tag: JSON!
  validated: BigInt!
  validated_sign: BigInt!
  created_at: DateTime
  updated_at: DateTime
}

input ReportsCreateOrConnectWithoutMaintenanceInput {
  where: ReportsWhereUniqueInput!
  create: ReportsCreateWithoutMaintenanceInput!
}

input ReportsWhereUniqueInput {
  id: BigInt
}

input ReportsCreateManyMaintenanceInputEnvelope {
  data: [ReportsCreateManyMaintenanceInput!]!
  skipDuplicates: Boolean
}

input ReportsCreateManyMaintenanceInput {
  id: BigInt
  report: String!
  sign: String!
  tag: JSON!
  validated: BigInt!
  validated_sign: BigInt!
  created_at: DateTime
  updated_at: DateTime
}

input TicketCreateNestedOneWithoutMaintenanceInput {
  create: TicketCreateWithoutMaintenanceInput
  connectOrCreate: TicketCreateOrConnectWithoutMaintenanceInput
  connect: TicketWhereUniqueInput
}

input TicketCreateWithoutMaintenanceInput {
  id: BigInt
  name: String!
  description: String!
  photos: String!
  status: ticket_status!
  created_at: DateTime
  updated_at: DateTime
  machines: MachinesCreateNestedOneWithoutTicketInput!
}

input MachinesCreateNestedOneWithoutTicketInput {
  create: MachinesCreateWithoutTicketInput
  connectOrCreate: MachinesCreateOrConnectWithoutTicketInput
  connect: MachinesWhereUniqueInput
}

input MachinesCreateWithoutTicketInput {
  id: BigInt
  name: String!
  label: String!
  profile: JSON
  priority: Int!
  created_at: DateTime
  updated_at: DateTime
  section: SectionsCreateNestedOneWithoutMachinesInput!
  maintenance: MaintenanceCreateNestedManyWithoutMachinesInput
  machine_catagory: machine_catagoryCreateNestedOneWithoutMachinesInput!
  routine_maintanances: routine_maintanancesCreateNestedManyWithoutMeachineInput
}

input MachinesCreateOrConnectWithoutTicketInput {
  where: MachinesWhereUniqueInput!
  create: MachinesCreateWithoutTicketInput!
}

input MachinesWhereUniqueInput {
  id: BigInt
}

input TicketCreateOrConnectWithoutMaintenanceInput {
  where: TicketWhereUniqueInput!
  create: TicketCreateWithoutMaintenanceInput!
}

input MaintenanceCreateOrConnectWithoutAssigneeInput {
  where: MaintenanceWhereUniqueInput!
  create: MaintenanceCreateWithoutAssigneeInput!
}

input MaintenanceWhereUniqueInput {
  id: BigInt
}

input MaintenanceCreateManyAssigneeInputEnvelope {
  data: [MaintenanceCreateManyAssigneeInput!]!
  skipDuplicates: Boolean
}

input MaintenanceCreateManyAssigneeInput {
  id: BigInt
  name: String!
  photo: String
  description: String!
  from: DateTime!
  to: DateTime!
  resolved: Boolean!
  metadata: JSON
  un_planned: Boolean!
  elapsed: DateTime
  machine_id: BigInt!
  created_at: DateTime
  updated_at: DateTime
}

input production_dataCreateNestedManyWithoutUpdatedByInput {
  create: [production_dataCreateWithoutUpdatedByInput!]
  connectOrCreate: [production_dataCreateOrConnectWithoutUpdatedByInput!]
  createMany: production_dataCreateManyUpdatedByInputEnvelope
  connect: [production_dataWhereUniqueInput!]
}

input production_dataCreateWithoutUpdatedByInput {
  id: BigInt
  production: JSON
  shift: String!
  date: DateTime!
  created_at: DateTime
  updated_at: DateTime
}

input production_dataCreateOrConnectWithoutUpdatedByInput {
  where: production_dataWhereUniqueInput!
  create: production_dataCreateWithoutUpdatedByInput!
}

input production_dataWhereUniqueInput {
  id: BigInt
}

input production_dataCreateManyUpdatedByInputEnvelope {
  data: [production_dataCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input production_dataCreateManyUpdatedByInput {
  id: BigInt
  production: JSON
  shift: String!
  date: DateTime!
  created_at: DateTime
  updated_at: DateTime
}

input UsersCreateOrConnectWithoutRoutine_maintanancesInput {
  where: UsersWhereUniqueInput!
  create: UsersCreateWithoutRoutine_maintanancesInput!
}

input UsersWhereUniqueInput {
  id: BigInt
  phone: String
}

input routine_maintanancesCreateOrConnectWithoutMeachineInput {
  where: routine_maintanancesWhereUniqueInput!
  create: routine_maintanancesCreateWithoutMeachineInput!
}

input routine_maintanancesWhereUniqueInput {
  id: BigInt
}

input routine_maintanancesCreateManyMeachineInputEnvelope {
  data: [routine_maintanancesCreateManyMeachineInput!]!
  skipDuplicates: Boolean
}

input routine_maintanancesCreateManyMeachineInput {
  id: BigInt
  name: String!
  description: String!
  cron: String!
  duration: Int!
  assignee_id: BigInt!
  created_at: DateTime
  updated_at: DateTime
}

input MachinesCreateOrConnectWithoutMaintenanceInput {
  where: MachinesWhereUniqueInput!
  create: MachinesCreateWithoutMaintenanceInput!
}

input MaintenanceCreateOrConnectWithoutTicketInput {
  where: MaintenanceWhereUniqueInput!
  create: MaintenanceCreateWithoutTicketInput!
}

input TicketCreateOrConnectWithoutUserInput {
  where: TicketWhereUniqueInput!
  create: TicketCreateWithoutUserInput!
}

input TicketCreateManyUserInputEnvelope {
  data: [TicketCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input TicketCreateManyUserInput {
  id: BigInt
  name: String!
  description: String!
  photos: String!
  maintenance_id: BigInt
  machine_id: BigInt!
  status: ticket_status!
  created_at: DateTime
  updated_at: DateTime
}

input routine_maintanancesCreateNestedManyWithoutAssigneeInput {
  create: [routine_maintanancesCreateWithoutAssigneeInput!]
  connectOrCreate: [routine_maintanancesCreateOrConnectWithoutAssigneeInput!]
  createMany: routine_maintanancesCreateManyAssigneeInputEnvelope
  connect: [routine_maintanancesWhereUniqueInput!]
}

input routine_maintanancesCreateWithoutAssigneeInput {
  id: BigInt
  name: String!
  description: String!
  cron: String!
  duration: Int!
  created_at: DateTime
  updated_at: DateTime
  meachine: MachinesCreateNestedOneWithoutRoutine_maintanancesInput!
}

input MachinesCreateNestedOneWithoutRoutine_maintanancesInput {
  create: MachinesCreateWithoutRoutine_maintanancesInput
  connectOrCreate: MachinesCreateOrConnectWithoutRoutine_maintanancesInput
  connect: MachinesWhereUniqueInput
}

input MachinesCreateWithoutRoutine_maintanancesInput {
  id: BigInt
  name: String!
  label: String!
  profile: JSON
  priority: Int!
  created_at: DateTime
  updated_at: DateTime
  section: SectionsCreateNestedOneWithoutMachinesInput!
  maintenance: MaintenanceCreateNestedManyWithoutMachinesInput
  Ticket: TicketCreateNestedManyWithoutMachinesInput
  machine_catagory: machine_catagoryCreateNestedOneWithoutMachinesInput!
}

input MachinesCreateOrConnectWithoutRoutine_maintanancesInput {
  where: MachinesWhereUniqueInput!
  create: MachinesCreateWithoutRoutine_maintanancesInput!
}

input routine_maintanancesCreateOrConnectWithoutAssigneeInput {
  where: routine_maintanancesWhereUniqueInput!
  create: routine_maintanancesCreateWithoutAssigneeInput!
}

input routine_maintanancesCreateManyAssigneeInputEnvelope {
  data: [routine_maintanancesCreateManyAssigneeInput!]!
  skipDuplicates: Boolean
}

input routine_maintanancesCreateManyAssigneeInput {
  id: BigInt
  name: String!
  description: String!
  cron: String!
  duration: Int!
  meachine_id: BigInt!
  created_at: DateTime
  updated_at: DateTime
}

input UsersCreateOrConnectWithoutMaintenanceInput {
  where: UsersWhereUniqueInput!
  create: UsersCreateWithoutMaintenanceInput!
}

input MaintenanceCreateOrConnectWithoutMachinesInput {
  where: MaintenanceWhereUniqueInput!
  create: MaintenanceCreateWithoutMachinesInput!
}

input MaintenanceCreateManyMachinesInputEnvelope {
  data: [MaintenanceCreateManyMachinesInput!]!
  skipDuplicates: Boolean
}

input MaintenanceCreateManyMachinesInput {
  id: BigInt
  name: String!
  photo: String
  description: String!
  from: DateTime!
  to: DateTime!
  resolved: Boolean!
  metadata: JSON
  un_planned: Boolean!
  elapsed: DateTime
  assignee_id: BigInt!
  created_at: DateTime
  updated_at: DateTime
}

input MachinesCreateOrConnectWithoutBlockInput {
  where: MachinesWhereUniqueInput!
  create: MachinesCreateWithoutBlockInput!
}

input MachinesCreateManyBlockInputEnvelope {
  data: [MachinesCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input MachinesCreateManyBlockInput {
  id: BigInt
  name: String!
  section_id: BigInt!
  label: String!
  profile: JSON
  priority: Int!
  created_at: DateTime
  updated_at: DateTime
  machine_catagory_id: BigInt!
}

input UsersCreateNestedManyWithoutBlockInput {
  create: [UsersCreateWithoutBlockInput!]
  connectOrCreate: [UsersCreateOrConnectWithoutBlockInput!]
  createMany: UsersCreateManyBlockInputEnvelope
  connect: [UsersWhereUniqueInput!]
}

input UsersCreateWithoutBlockInput {
  id: BigInt
  profile: JSON
  phone: String!
  name: String!
  created_at: DateTime
  updated_at: DateTime
  role: Role!
  extra_roles: UsersCreateextra_rolesInput
  role_alias: String
  maintenance: MaintenanceCreateNestedManyWithoutAssigneeInput
  ticket: TicketCreateNestedManyWithoutUserInput
  routine_maintanances: routine_maintanancesCreateNestedManyWithoutAssigneeInput
  production_data: production_dataCreateNestedManyWithoutUpdatedByInput
}

input UsersCreateOrConnectWithoutBlockInput {
  where: UsersWhereUniqueInput!
  create: UsersCreateWithoutBlockInput!
}

input UsersCreateManyBlockInputEnvelope {
  data: [UsersCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input UsersCreateManyBlockInput {
  id: BigInt
  profile: JSON
  phone: String!
  name: String!
  created_at: DateTime
  updated_at: DateTime
  role: Role!
  extra_roles: UsersCreateextra_rolesInput
  role_alias: String
}

input block_settingsCreateNestedManyWithoutBlockInput {
  create: [block_settingsCreateWithoutBlockInput!]
  connectOrCreate: [block_settingsCreateOrConnectWithoutBlockInput!]
  createMany: block_settingsCreateManyBlockInputEnvelope
  connect: [block_settingsWhereUniqueInput!]
}

input block_settingsCreateWithoutBlockInput {
  id: BigInt
  name: String!
  value: JSON!
  created_at: DateTime
  updated_at: DateTime
}

input block_settingsCreateOrConnectWithoutBlockInput {
  where: block_settingsWhereUniqueInput!
  create: block_settingsCreateWithoutBlockInput!
}

input block_settingsWhereUniqueInput {
  id: BigInt
  block_id_name: block_settingsBlock_idNameCompoundUniqueInput
}

input block_settingsBlock_idNameCompoundUniqueInput {
  block_id: BigInt!
  name: String!
}

input block_settingsCreateManyBlockInputEnvelope {
  data: [block_settingsCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input block_settingsCreateManyBlockInput {
  id: BigInt
  name: String!
  value: JSON!
  created_at: DateTime
  updated_at: DateTime
}

input production_dataCreateNestedManyWithoutBlockInput {
  create: [production_dataCreateWithoutBlockInput!]
  connectOrCreate: [production_dataCreateOrConnectWithoutBlockInput!]
  createMany: production_dataCreateManyBlockInputEnvelope
  connect: [production_dataWhereUniqueInput!]
}

input production_dataCreateWithoutBlockInput {
  id: BigInt
  production: JSON
  shift: String!
  date: DateTime!
  created_at: DateTime
  updated_at: DateTime
  updatedBy: UsersCreateNestedOneWithoutProduction_dataInput!
}

input UsersCreateNestedOneWithoutProduction_dataInput {
  create: UsersCreateWithoutProduction_dataInput
  connectOrCreate: UsersCreateOrConnectWithoutProduction_dataInput
  connect: UsersWhereUniqueInput
}

input UsersCreateWithoutProduction_dataInput {
  id: BigInt
  profile: JSON
  phone: String!
  name: String!
  created_at: DateTime
  updated_at: DateTime
  role: Role!
  extra_roles: UsersCreateextra_rolesInput
  role_alias: String
  maintenance: MaintenanceCreateNestedManyWithoutAssigneeInput
  ticket: TicketCreateNestedManyWithoutUserInput
  routine_maintanances: routine_maintanancesCreateNestedManyWithoutAssigneeInput
}

input UsersCreateOrConnectWithoutProduction_dataInput {
  where: UsersWhereUniqueInput!
  create: UsersCreateWithoutProduction_dataInput!
}

input production_dataCreateOrConnectWithoutBlockInput {
  where: production_dataWhereUniqueInput!
  create: production_dataCreateWithoutBlockInput!
}

input production_dataCreateManyBlockInputEnvelope {
  data: [production_dataCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input production_dataCreateManyBlockInput {
  id: BigInt
  production: JSON
  shift: String!
  date: DateTime!
  updated_by: BigInt!
  created_at: DateTime
  updated_at: DateTime
}

input catagoryCreateNestedManyWithoutBlockInput {
  create: [catagoryCreateWithoutBlockInput!]
  connectOrCreate: [catagoryCreateOrConnectWithoutBlockInput!]
  createMany: catagoryCreateManyBlockInputEnvelope
  connect: [catagoryWhereUniqueInput!]
}

input catagoryCreateWithoutBlockInput {
  id: BigInt
  name: String!
  created_at: DateTime
  updated_at: DateTime
  items: ItemsCreateNestedManyWithoutCatagoryInput
}

input ItemsCreateNestedManyWithoutCatagoryInput {
  create: [ItemsCreateWithoutCatagoryInput!]
  connectOrCreate: [ItemsCreateOrConnectWithoutCatagoryInput!]
  createMany: ItemsCreateManyCatagoryInputEnvelope
  connect: [ItemsWhereUniqueInput!]
}

input ItemsCreateWithoutCatagoryInput {
  id: BigInt
  name: String!
  code: String!
  quantity: Int!
  unit_price: Float!
  created_at: DateTime
  updated_at: DateTime
  replacements: ReplacementsCreateNestedManyWithoutItemsInput
}

input ReplacementsCreateNestedManyWithoutItemsInput {
  create: [ReplacementsCreateWithoutItemsInput!]
  connectOrCreate: [ReplacementsCreateOrConnectWithoutItemsInput!]
  createMany: ReplacementsCreateManyItemsInputEnvelope
  connect: [ReplacementsWhereUniqueInput!]
}

input ReplacementsCreateWithoutItemsInput {
  id: BigInt
  name: String!
  description: String!
  quantity: Int!
  metadata: JSON
  created_at: DateTime
  approved: Boolean
  updated_at: DateTime
  maintenance: MaintenanceCreateNestedOneWithoutReplacementsInput!
}

input MaintenanceCreateNestedOneWithoutReplacementsInput {
  create: MaintenanceCreateWithoutReplacementsInput
  connectOrCreate: MaintenanceCreateOrConnectWithoutReplacementsInput
  connect: MaintenanceWhereUniqueInput
}

input MaintenanceCreateWithoutReplacementsInput {
  id: BigInt
  name: String!
  photo: String
  description: String!
  from: DateTime!
  to: DateTime!
  resolved: Boolean!
  metadata: JSON
  un_planned: Boolean!
  elapsed: DateTime
  created_at: DateTime
  updated_at: DateTime
  assignee: UsersCreateNestedOneWithoutMaintenanceInput!
  machines: MachinesCreateNestedOneWithoutMaintenanceInput!
  reports: ReportsCreateNestedManyWithoutMaintenanceInput
  ticket: TicketCreateNestedOneWithoutMaintenanceInput
}

input MaintenanceCreateOrConnectWithoutReplacementsInput {
  where: MaintenanceWhereUniqueInput!
  create: MaintenanceCreateWithoutReplacementsInput!
}

input ReplacementsCreateOrConnectWithoutItemsInput {
  where: ReplacementsWhereUniqueInput!
  create: ReplacementsCreateWithoutItemsInput!
}

input ReplacementsCreateManyItemsInputEnvelope {
  data: [ReplacementsCreateManyItemsInput!]!
  skipDuplicates: Boolean
}

input ReplacementsCreateManyItemsInput {
  id: BigInt
  name: String!
  description: String!
  quantity: Int!
  metadata: JSON
  maintanance_id: BigInt!
  created_at: DateTime
  approved: Boolean
  updated_at: DateTime
}

input ItemsCreateOrConnectWithoutCatagoryInput {
  where: ItemsWhereUniqueInput!
  create: ItemsCreateWithoutCatagoryInput!
}

input ItemsCreateManyCatagoryInputEnvelope {
  data: [ItemsCreateManyCatagoryInput!]!
  skipDuplicates: Boolean
}

input ItemsCreateManyCatagoryInput {
  id: BigInt
  name: String!
  code: String!
  quantity: Int!
  unit_price: Float!
  created_at: DateTime
  updated_at: DateTime
}

input catagoryCreateOrConnectWithoutBlockInput {
  where: catagoryWhereUniqueInput!
  create: catagoryCreateWithoutBlockInput!
}

input catagoryCreateManyBlockInputEnvelope {
  data: [catagoryCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input catagoryCreateManyBlockInput {
  id: BigInt
  name: String!
  created_at: DateTime
  updated_at: DateTime
}

input ItemsCreateNestedManyWithoutBlockInput {
  create: [ItemsCreateWithoutBlockInput!]
  connectOrCreate: [ItemsCreateOrConnectWithoutBlockInput!]
  createMany: ItemsCreateManyBlockInputEnvelope
  connect: [ItemsWhereUniqueInput!]
}

input ItemsCreateWithoutBlockInput {
  id: BigInt
  name: String!
  code: String!
  quantity: Int!
  unit_price: Float!
  created_at: DateTime
  updated_at: DateTime
  catagory: catagoryCreateNestedOneWithoutItemsInput!
  replacements: ReplacementsCreateNestedManyWithoutItemsInput
}

input ItemsCreateOrConnectWithoutBlockInput {
  where: ItemsWhereUniqueInput!
  create: ItemsCreateWithoutBlockInput!
}

input ItemsCreateManyBlockInputEnvelope {
  data: [ItemsCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input ItemsCreateManyBlockInput {
  id: BigInt
  name: String!
  code: String!
  quantity: Int!
  unit_price: Float!
  catagory_id: BigInt!
  created_at: DateTime
  updated_at: DateTime
}

input machine_catagoryCreateNestedManyWithoutBlockInput {
  create: [machine_catagoryCreateWithoutBlockInput!]
  connectOrCreate: [machine_catagoryCreateOrConnectWithoutBlockInput!]
  createMany: machine_catagoryCreateManyBlockInputEnvelope
  connect: [machine_catagoryWhereUniqueInput!]
}

input machine_catagoryCreateWithoutBlockInput {
  id: BigInt
  name: String!
  created_at: DateTime
  updated_at: DateTime
  machines: MachinesCreateNestedManyWithoutMachine_catagoryInput
}

input MachinesCreateNestedManyWithoutMachine_catagoryInput {
  create: [MachinesCreateWithoutMachine_catagoryInput!]
  connectOrCreate: [MachinesCreateOrConnectWithoutMachine_catagoryInput!]
  createMany: MachinesCreateManyMachine_catagoryInputEnvelope
  connect: [MachinesWhereUniqueInput!]
}

input MachinesCreateWithoutMachine_catagoryInput {
  id: BigInt
  name: String!
  label: String!
  profile: JSON
  priority: Int!
  created_at: DateTime
  updated_at: DateTime
  section: SectionsCreateNestedOneWithoutMachinesInput!
  maintenance: MaintenanceCreateNestedManyWithoutMachinesInput
  Ticket: TicketCreateNestedManyWithoutMachinesInput
  routine_maintanances: routine_maintanancesCreateNestedManyWithoutMeachineInput
}

input MachinesCreateOrConnectWithoutMachine_catagoryInput {
  where: MachinesWhereUniqueInput!
  create: MachinesCreateWithoutMachine_catagoryInput!
}

input MachinesCreateManyMachine_catagoryInputEnvelope {
  data: [MachinesCreateManyMachine_catagoryInput!]!
  skipDuplicates: Boolean
}

input MachinesCreateManyMachine_catagoryInput {
  id: BigInt
  name: String!
  section_id: BigInt!
  label: String!
  profile: JSON
  priority: Int!
  created_at: DateTime
  updated_at: DateTime
}

input machine_catagoryCreateOrConnectWithoutBlockInput {
  where: machine_catagoryWhereUniqueInput!
  create: machine_catagoryCreateWithoutBlockInput!
}

input machine_catagoryCreateManyBlockInputEnvelope {
  data: [machine_catagoryCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input machine_catagoryCreateManyBlockInput {
  id: BigInt
  name: String!
  created_at: DateTime
  updated_at: DateTime
}

input MaintenanceCreateNestedManyWithoutBlockInput {
  create: [MaintenanceCreateWithoutBlockInput!]
  connectOrCreate: [MaintenanceCreateOrConnectWithoutBlockInput!]
  createMany: MaintenanceCreateManyBlockInputEnvelope
  connect: [MaintenanceWhereUniqueInput!]
}

input MaintenanceCreateWithoutBlockInput {
  id: BigInt
  name: String!
  photo: String
  description: String!
  from: DateTime!
  to: DateTime!
  resolved: Boolean!
  metadata: JSON
  un_planned: Boolean!
  elapsed: DateTime
  created_at: DateTime
  updated_at: DateTime
  assignee: UsersCreateNestedOneWithoutMaintenanceInput!
  machines: MachinesCreateNestedOneWithoutMaintenanceInput!
  replacements: ReplacementsCreateNestedManyWithoutMaintenanceInput
  reports: ReportsCreateNestedManyWithoutMaintenanceInput
  ticket: TicketCreateNestedOneWithoutMaintenanceInput
}

input MaintenanceCreateOrConnectWithoutBlockInput {
  where: MaintenanceWhereUniqueInput!
  create: MaintenanceCreateWithoutBlockInput!
}

input MaintenanceCreateManyBlockInputEnvelope {
  data: [MaintenanceCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input MaintenanceCreateManyBlockInput {
  id: BigInt
  name: String!
  photo: String
  description: String!
  from: DateTime!
  to: DateTime!
  resolved: Boolean!
  metadata: JSON
  un_planned: Boolean!
  elapsed: DateTime
  assignee_id: BigInt!
  machine_id: BigInt!
  created_at: DateTime
  updated_at: DateTime
}

input ReplacementsCreateNestedManyWithoutBlockInput {
  create: [ReplacementsCreateWithoutBlockInput!]
  connectOrCreate: [ReplacementsCreateOrConnectWithoutBlockInput!]
  createMany: ReplacementsCreateManyBlockInputEnvelope
  connect: [ReplacementsWhereUniqueInput!]
}

input ReplacementsCreateWithoutBlockInput {
  id: BigInt
  name: String!
  description: String!
  quantity: Int!
  metadata: JSON
  created_at: DateTime
  approved: Boolean
  updated_at: DateTime
  items: ItemsCreateNestedOneWithoutReplacementsInput!
  maintenance: MaintenanceCreateNestedOneWithoutReplacementsInput!
}

input ReplacementsCreateOrConnectWithoutBlockInput {
  where: ReplacementsWhereUniqueInput!
  create: ReplacementsCreateWithoutBlockInput!
}

input ReplacementsCreateManyBlockInputEnvelope {
  data: [ReplacementsCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input ReplacementsCreateManyBlockInput {
  id: BigInt
  name: String!
  description: String!
  quantity: Int!
  metadata: JSON
  item_id: BigInt!
  maintanance_id: BigInt!
  created_at: DateTime
  approved: Boolean
  updated_at: DateTime
}

input ReportsCreateNestedManyWithoutBlockInput {
  create: [ReportsCreateWithoutBlockInput!]
  connectOrCreate: [ReportsCreateOrConnectWithoutBlockInput!]
  createMany: ReportsCreateManyBlockInputEnvelope
  connect: [ReportsWhereUniqueInput!]
}

input ReportsCreateWithoutBlockInput {
  id: BigInt
  report: String!
  sign: String!
  tag: JSON!
  validated: BigInt!
  validated_sign: BigInt!
  created_at: DateTime
  updated_at: DateTime
  maintenance: MaintenanceCreateNestedOneWithoutReportsInput!
}

input MaintenanceCreateNestedOneWithoutReportsInput {
  create: MaintenanceCreateWithoutReportsInput
  connectOrCreate: MaintenanceCreateOrConnectWithoutReportsInput
  connect: MaintenanceWhereUniqueInput
}

input MaintenanceCreateWithoutReportsInput {
  id: BigInt
  name: String!
  photo: String
  description: String!
  from: DateTime!
  to: DateTime!
  resolved: Boolean!
  metadata: JSON
  un_planned: Boolean!
  elapsed: DateTime
  created_at: DateTime
  updated_at: DateTime
  assignee: UsersCreateNestedOneWithoutMaintenanceInput!
  machines: MachinesCreateNestedOneWithoutMaintenanceInput!
  replacements: ReplacementsCreateNestedManyWithoutMaintenanceInput
  ticket: TicketCreateNestedOneWithoutMaintenanceInput
}

input MaintenanceCreateOrConnectWithoutReportsInput {
  where: MaintenanceWhereUniqueInput!
  create: MaintenanceCreateWithoutReportsInput!
}

input ReportsCreateOrConnectWithoutBlockInput {
  where: ReportsWhereUniqueInput!
  create: ReportsCreateWithoutBlockInput!
}

input ReportsCreateManyBlockInputEnvelope {
  data: [ReportsCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input ReportsCreateManyBlockInput {
  id: BigInt
  report: String!
  sign: String!
  tag: JSON!
  validated: BigInt!
  validated_sign: BigInt!
  maintance_id: BigInt!
  created_at: DateTime
  updated_at: DateTime
}

input SectionsCreateNestedManyWithoutBlockInput {
  create: [SectionsCreateWithoutBlockInput!]
  connectOrCreate: [SectionsCreateOrConnectWithoutBlockInput!]
  createMany: SectionsCreateManyBlockInputEnvelope
  connect: [SectionsWhereUniqueInput!]
}

input SectionsCreateWithoutBlockInput {
  id: BigInt
  name: String!
  created_at: DateTime
  updated_at: DateTime
  machines: MachinesCreateNestedManyWithoutSectionInput
}

input MachinesCreateNestedManyWithoutSectionInput {
  create: [MachinesCreateWithoutSectionInput!]
  connectOrCreate: [MachinesCreateOrConnectWithoutSectionInput!]
  createMany: MachinesCreateManySectionInputEnvelope
  connect: [MachinesWhereUniqueInput!]
}

input MachinesCreateWithoutSectionInput {
  id: BigInt
  name: String!
  label: String!
  profile: JSON
  priority: Int!
  created_at: DateTime
  updated_at: DateTime
  maintenance: MaintenanceCreateNestedManyWithoutMachinesInput
  Ticket: TicketCreateNestedManyWithoutMachinesInput
  machine_catagory: machine_catagoryCreateNestedOneWithoutMachinesInput!
  routine_maintanances: routine_maintanancesCreateNestedManyWithoutMeachineInput
}

input MachinesCreateOrConnectWithoutSectionInput {
  where: MachinesWhereUniqueInput!
  create: MachinesCreateWithoutSectionInput!
}

input MachinesCreateManySectionInputEnvelope {
  data: [MachinesCreateManySectionInput!]!
  skipDuplicates: Boolean
}

input MachinesCreateManySectionInput {
  id: BigInt
  name: String!
  label: String!
  profile: JSON
  priority: Int!
  created_at: DateTime
  updated_at: DateTime
  machine_catagory_id: BigInt!
}

input SectionsCreateOrConnectWithoutBlockInput {
  where: SectionsWhereUniqueInput!
  create: SectionsCreateWithoutBlockInput!
}

input SectionsCreateManyBlockInputEnvelope {
  data: [SectionsCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input SectionsCreateManyBlockInput {
  id: BigInt
  name: String!
  created_at: DateTime
  updated_at: DateTime
}

input TicketCreateNestedManyWithoutBlockInput {
  create: [TicketCreateWithoutBlockInput!]
  connectOrCreate: [TicketCreateOrConnectWithoutBlockInput!]
  createMany: TicketCreateManyBlockInputEnvelope
  connect: [TicketWhereUniqueInput!]
}

input TicketCreateWithoutBlockInput {
  id: BigInt
  name: String!
  description: String!
  photos: String!
  status: ticket_status!
  created_at: DateTime
  updated_at: DateTime
  maintenance: MaintenanceCreateNestedOneWithoutTicketInput
  machines: MachinesCreateNestedOneWithoutTicketInput!
}

input TicketCreateOrConnectWithoutBlockInput {
  where: TicketWhereUniqueInput!
  create: TicketCreateWithoutBlockInput!
}

input TicketCreateManyBlockInputEnvelope {
  data: [TicketCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input TicketCreateManyBlockInput {
  id: BigInt
  name: String!
  description: String!
  photos: String!
  maintenance_id: BigInt
  machine_id: BigInt!
  status: ticket_status!
  created_at: DateTime
  updated_at: DateTime
}

input routine_maintanancesCreateNestedManyWithoutBlockInput {
  create: [routine_maintanancesCreateWithoutBlockInput!]
  connectOrCreate: [routine_maintanancesCreateOrConnectWithoutBlockInput!]
  createMany: routine_maintanancesCreateManyBlockInputEnvelope
  connect: [routine_maintanancesWhereUniqueInput!]
}

input routine_maintanancesCreateWithoutBlockInput {
  id: BigInt
  name: String!
  description: String!
  cron: String!
  duration: Int!
  created_at: DateTime
  updated_at: DateTime
  assignee: UsersCreateNestedOneWithoutRoutine_maintanancesInput!
  meachine: MachinesCreateNestedOneWithoutRoutine_maintanancesInput!
}

input routine_maintanancesCreateOrConnectWithoutBlockInput {
  where: routine_maintanancesWhereUniqueInput!
  create: routine_maintanancesCreateWithoutBlockInput!
}

input routine_maintanancesCreateManyBlockInputEnvelope {
  data: [routine_maintanancesCreateManyBlockInput!]!
  skipDuplicates: Boolean
}

input routine_maintanancesCreateManyBlockInput {
  id: BigInt
  name: String!
  description: String!
  cron: String!
  duration: Int!
  assignee_id: BigInt!
  meachine_id: BigInt!
  created_at: DateTime
  updated_at: DateTime
}

input BlockUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: StringFieldUpdateOperationsInput
  Mailings: BlockUpdateMailingsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  machines: MachinesUpdateManyWithoutBlockNestedInput
  Users: UsersUpdateManyWithoutBlockNestedInput
  block_settings: block_settingsUpdateManyWithoutBlockNestedInput
  production_data: production_dataUpdateManyWithoutBlockNestedInput
  catagory: catagoryUpdateManyWithoutBlockNestedInput
  Items: ItemsUpdateManyWithoutBlockNestedInput
  machine_catagory: machine_catagoryUpdateManyWithoutBlockNestedInput
  Maintenance: MaintenanceUpdateManyWithoutBlockNestedInput
  Replacements: ReplacementsUpdateManyWithoutBlockNestedInput
  Reports: ReportsUpdateManyWithoutBlockNestedInput
  Sections: SectionsUpdateManyWithoutBlockNestedInput
  Ticket: TicketUpdateManyWithoutBlockNestedInput
  routine_maintanances: routine_maintanancesUpdateManyWithoutBlockNestedInput
}

input BigIntFieldUpdateOperationsInput {
  set: BigInt
  increment: BigInt
  decrement: BigInt
  multiply: BigInt
  divide: BigInt
}

input StringFieldUpdateOperationsInput {
  set: String
}

input BlockUpdateMailingsInput {
  set: [String!]
  push: [String!]
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input MachinesUpdateManyWithoutBlockNestedInput {
  create: [MachinesCreateWithoutBlockInput!]
  connectOrCreate: [MachinesCreateOrConnectWithoutBlockInput!]
  upsert: [MachinesUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: MachinesCreateManyBlockInputEnvelope
  set: [MachinesWhereUniqueInput!]
  disconnect: [MachinesWhereUniqueInput!]
  delete: [MachinesWhereUniqueInput!]
  connect: [MachinesWhereUniqueInput!]
  update: [MachinesUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [MachinesUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [MachinesScalarWhereInput!]
}

input MachinesUpsertWithWhereUniqueWithoutBlockInput {
  where: MachinesWhereUniqueInput!
  update: MachinesUpdateWithoutBlockInput!
  create: MachinesCreateWithoutBlockInput!
}

input MachinesUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  label: StringFieldUpdateOperationsInput
  profile: JSON
  priority: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  section: SectionsUpdateOneRequiredWithoutMachinesNestedInput
  maintenance: MaintenanceUpdateManyWithoutMachinesNestedInput
  Ticket: TicketUpdateManyWithoutMachinesNestedInput
  machine_catagory: machine_catagoryUpdateOneRequiredWithoutMachinesNestedInput
  routine_maintanances: routine_maintanancesUpdateManyWithoutMeachineNestedInput
}

input IntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input SectionsUpdateOneRequiredWithoutMachinesNestedInput {
  create: SectionsCreateWithoutMachinesInput
  connectOrCreate: SectionsCreateOrConnectWithoutMachinesInput
  upsert: SectionsUpsertWithoutMachinesInput
  connect: SectionsWhereUniqueInput
  update: SectionsUpdateWithoutMachinesInput
}

input SectionsUpsertWithoutMachinesInput {
  update: SectionsUpdateWithoutMachinesInput!
  create: SectionsCreateWithoutMachinesInput!
}

input SectionsUpdateWithoutMachinesInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input MaintenanceUpdateManyWithoutMachinesNestedInput {
  create: [MaintenanceCreateWithoutMachinesInput!]
  connectOrCreate: [MaintenanceCreateOrConnectWithoutMachinesInput!]
  upsert: [MaintenanceUpsertWithWhereUniqueWithoutMachinesInput!]
  createMany: MaintenanceCreateManyMachinesInputEnvelope
  set: [MaintenanceWhereUniqueInput!]
  disconnect: [MaintenanceWhereUniqueInput!]
  delete: [MaintenanceWhereUniqueInput!]
  connect: [MaintenanceWhereUniqueInput!]
  update: [MaintenanceUpdateWithWhereUniqueWithoutMachinesInput!]
  updateMany: [MaintenanceUpdateManyWithWhereWithoutMachinesInput!]
  deleteMany: [MaintenanceScalarWhereInput!]
}

input MaintenanceUpsertWithWhereUniqueWithoutMachinesInput {
  where: MaintenanceWhereUniqueInput!
  update: MaintenanceUpdateWithoutMachinesInput!
  create: MaintenanceCreateWithoutMachinesInput!
}

input MaintenanceUpdateWithoutMachinesInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  photo: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  from: DateTimeFieldUpdateOperationsInput
  to: DateTimeFieldUpdateOperationsInput
  resolved: BoolFieldUpdateOperationsInput
  metadata: JSON
  un_planned: BoolFieldUpdateOperationsInput
  elapsed: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  assignee: UsersUpdateOneRequiredWithoutMaintenanceNestedInput
  replacements: ReplacementsUpdateManyWithoutMaintenanceNestedInput
  reports: ReportsUpdateManyWithoutMaintenanceNestedInput
  ticket: TicketUpdateOneWithoutMaintenanceNestedInput
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input UsersUpdateOneRequiredWithoutMaintenanceNestedInput {
  create: UsersCreateWithoutMaintenanceInput
  connectOrCreate: UsersCreateOrConnectWithoutMaintenanceInput
  upsert: UsersUpsertWithoutMaintenanceInput
  connect: UsersWhereUniqueInput
  update: UsersUpdateWithoutMaintenanceInput
}

input UsersUpsertWithoutMaintenanceInput {
  update: UsersUpdateWithoutMaintenanceInput!
  create: UsersCreateWithoutMaintenanceInput!
}

input UsersUpdateWithoutMaintenanceInput {
  id: BigIntFieldUpdateOperationsInput
  profile: JSON
  phone: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  extra_roles: UsersUpdateextra_rolesInput
  role_alias: StringFieldUpdateOperationsInput
  ticket: TicketUpdateManyWithoutUserNestedInput
  routine_maintanances: routine_maintanancesUpdateManyWithoutAssigneeNestedInput
  production_data: production_dataUpdateManyWithoutUpdatedByNestedInput
}

input EnumRoleFieldUpdateOperationsInput {
  set: Role
}

input UsersUpdateextra_rolesInput {
  set: [Role!]
  push: [Role!]
}

input TicketUpdateManyWithoutUserNestedInput {
  create: [TicketCreateWithoutUserInput!]
  connectOrCreate: [TicketCreateOrConnectWithoutUserInput!]
  upsert: [TicketUpsertWithWhereUniqueWithoutUserInput!]
  createMany: TicketCreateManyUserInputEnvelope
  set: [TicketWhereUniqueInput!]
  disconnect: [TicketWhereUniqueInput!]
  delete: [TicketWhereUniqueInput!]
  connect: [TicketWhereUniqueInput!]
  update: [TicketUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [TicketUpdateManyWithWhereWithoutUserInput!]
  deleteMany: [TicketScalarWhereInput!]
}

input TicketUpsertWithWhereUniqueWithoutUserInput {
  where: TicketWhereUniqueInput!
  update: TicketUpdateWithoutUserInput!
  create: TicketCreateWithoutUserInput!
}

input TicketUpdateWithoutUserInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  photos: StringFieldUpdateOperationsInput
  status: Enumticket_statusFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  maintenance: MaintenanceUpdateOneWithoutTicketNestedInput
  machines: MachinesUpdateOneRequiredWithoutTicketNestedInput
}

input Enumticket_statusFieldUpdateOperationsInput {
  set: ticket_status
}

input MaintenanceUpdateOneWithoutTicketNestedInput {
  create: MaintenanceCreateWithoutTicketInput
  connectOrCreate: MaintenanceCreateOrConnectWithoutTicketInput
  upsert: MaintenanceUpsertWithoutTicketInput
  disconnect: Boolean
  delete: Boolean
  connect: MaintenanceWhereUniqueInput
  update: MaintenanceUpdateWithoutTicketInput
}

input MaintenanceUpsertWithoutTicketInput {
  update: MaintenanceUpdateWithoutTicketInput!
  create: MaintenanceCreateWithoutTicketInput!
}

input MaintenanceUpdateWithoutTicketInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  photo: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  from: DateTimeFieldUpdateOperationsInput
  to: DateTimeFieldUpdateOperationsInput
  resolved: BoolFieldUpdateOperationsInput
  metadata: JSON
  un_planned: BoolFieldUpdateOperationsInput
  elapsed: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  assignee: UsersUpdateOneRequiredWithoutMaintenanceNestedInput
  machines: MachinesUpdateOneRequiredWithoutMaintenanceNestedInput
  replacements: ReplacementsUpdateManyWithoutMaintenanceNestedInput
  reports: ReportsUpdateManyWithoutMaintenanceNestedInput
}

input MachinesUpdateOneRequiredWithoutMaintenanceNestedInput {
  create: MachinesCreateWithoutMaintenanceInput
  connectOrCreate: MachinesCreateOrConnectWithoutMaintenanceInput
  upsert: MachinesUpsertWithoutMaintenanceInput
  connect: MachinesWhereUniqueInput
  update: MachinesUpdateWithoutMaintenanceInput
}

input MachinesUpsertWithoutMaintenanceInput {
  update: MachinesUpdateWithoutMaintenanceInput!
  create: MachinesCreateWithoutMaintenanceInput!
}

input MachinesUpdateWithoutMaintenanceInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  label: StringFieldUpdateOperationsInput
  profile: JSON
  priority: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  section: SectionsUpdateOneRequiredWithoutMachinesNestedInput
  Ticket: TicketUpdateManyWithoutMachinesNestedInput
  machine_catagory: machine_catagoryUpdateOneRequiredWithoutMachinesNestedInput
  routine_maintanances: routine_maintanancesUpdateManyWithoutMeachineNestedInput
}

input TicketUpdateManyWithoutMachinesNestedInput {
  create: [TicketCreateWithoutMachinesInput!]
  connectOrCreate: [TicketCreateOrConnectWithoutMachinesInput!]
  upsert: [TicketUpsertWithWhereUniqueWithoutMachinesInput!]
  createMany: TicketCreateManyMachinesInputEnvelope
  set: [TicketWhereUniqueInput!]
  disconnect: [TicketWhereUniqueInput!]
  delete: [TicketWhereUniqueInput!]
  connect: [TicketWhereUniqueInput!]
  update: [TicketUpdateWithWhereUniqueWithoutMachinesInput!]
  updateMany: [TicketUpdateManyWithWhereWithoutMachinesInput!]
  deleteMany: [TicketScalarWhereInput!]
}

input TicketUpsertWithWhereUniqueWithoutMachinesInput {
  where: TicketWhereUniqueInput!
  update: TicketUpdateWithoutMachinesInput!
  create: TicketCreateWithoutMachinesInput!
}

input TicketUpdateWithoutMachinesInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  photos: StringFieldUpdateOperationsInput
  status: Enumticket_statusFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  maintenance: MaintenanceUpdateOneWithoutTicketNestedInput
}

input TicketUpdateWithWhereUniqueWithoutMachinesInput {
  where: TicketWhereUniqueInput!
  data: TicketUpdateWithoutMachinesInput!
}

input TicketUpdateManyWithWhereWithoutMachinesInput {
  where: TicketScalarWhereInput!
  data: TicketUpdateManyMutationInput!
}

input TicketScalarWhereInput {
  AND: [TicketScalarWhereInput!]
  OR: [TicketScalarWhereInput!]
  NOT: [TicketScalarWhereInput!]
  id: BigIntFilter
  name: StringFilter
  description: StringFilter
  photos: StringFilter
  maintenance_id: BigIntNullableFilter
  machine_id: BigIntFilter
  status: Enumticket_statusFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
}

input TicketUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  photos: StringFieldUpdateOperationsInput
  status: Enumticket_statusFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input machine_catagoryUpdateOneRequiredWithoutMachinesNestedInput {
  create: machine_catagoryCreateWithoutMachinesInput
  connectOrCreate: machine_catagoryCreateOrConnectWithoutMachinesInput
  upsert: machine_catagoryUpsertWithoutMachinesInput
  connect: machine_catagoryWhereUniqueInput
  update: machine_catagoryUpdateWithoutMachinesInput
}

input machine_catagoryUpsertWithoutMachinesInput {
  update: machine_catagoryUpdateWithoutMachinesInput!
  create: machine_catagoryCreateWithoutMachinesInput!
}

input machine_catagoryUpdateWithoutMachinesInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input routine_maintanancesUpdateManyWithoutMeachineNestedInput {
  create: [routine_maintanancesCreateWithoutMeachineInput!]
  connectOrCreate: [routine_maintanancesCreateOrConnectWithoutMeachineInput!]
  upsert: [routine_maintanancesUpsertWithWhereUniqueWithoutMeachineInput!]
  createMany: routine_maintanancesCreateManyMeachineInputEnvelope
  set: [routine_maintanancesWhereUniqueInput!]
  disconnect: [routine_maintanancesWhereUniqueInput!]
  delete: [routine_maintanancesWhereUniqueInput!]
  connect: [routine_maintanancesWhereUniqueInput!]
  update: [routine_maintanancesUpdateWithWhereUniqueWithoutMeachineInput!]
  updateMany: [routine_maintanancesUpdateManyWithWhereWithoutMeachineInput!]
  deleteMany: [routine_maintanancesScalarWhereInput!]
}

input routine_maintanancesUpsertWithWhereUniqueWithoutMeachineInput {
  where: routine_maintanancesWhereUniqueInput!
  update: routine_maintanancesUpdateWithoutMeachineInput!
  create: routine_maintanancesCreateWithoutMeachineInput!
}

input routine_maintanancesUpdateWithoutMeachineInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  cron: StringFieldUpdateOperationsInput
  duration: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  assignee: UsersUpdateOneRequiredWithoutRoutine_maintanancesNestedInput
}

input UsersUpdateOneRequiredWithoutRoutine_maintanancesNestedInput {
  create: UsersCreateWithoutRoutine_maintanancesInput
  connectOrCreate: UsersCreateOrConnectWithoutRoutine_maintanancesInput
  upsert: UsersUpsertWithoutRoutine_maintanancesInput
  connect: UsersWhereUniqueInput
  update: UsersUpdateWithoutRoutine_maintanancesInput
}

input UsersUpsertWithoutRoutine_maintanancesInput {
  update: UsersUpdateWithoutRoutine_maintanancesInput!
  create: UsersCreateWithoutRoutine_maintanancesInput!
}

input UsersUpdateWithoutRoutine_maintanancesInput {
  id: BigIntFieldUpdateOperationsInput
  profile: JSON
  phone: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  extra_roles: UsersUpdateextra_rolesInput
  role_alias: StringFieldUpdateOperationsInput
  maintenance: MaintenanceUpdateManyWithoutAssigneeNestedInput
  ticket: TicketUpdateManyWithoutUserNestedInput
  production_data: production_dataUpdateManyWithoutUpdatedByNestedInput
}

input MaintenanceUpdateManyWithoutAssigneeNestedInput {
  create: [MaintenanceCreateWithoutAssigneeInput!]
  connectOrCreate: [MaintenanceCreateOrConnectWithoutAssigneeInput!]
  upsert: [MaintenanceUpsertWithWhereUniqueWithoutAssigneeInput!]
  createMany: MaintenanceCreateManyAssigneeInputEnvelope
  set: [MaintenanceWhereUniqueInput!]
  disconnect: [MaintenanceWhereUniqueInput!]
  delete: [MaintenanceWhereUniqueInput!]
  connect: [MaintenanceWhereUniqueInput!]
  update: [MaintenanceUpdateWithWhereUniqueWithoutAssigneeInput!]
  updateMany: [MaintenanceUpdateManyWithWhereWithoutAssigneeInput!]
  deleteMany: [MaintenanceScalarWhereInput!]
}

input MaintenanceUpsertWithWhereUniqueWithoutAssigneeInput {
  where: MaintenanceWhereUniqueInput!
  update: MaintenanceUpdateWithoutAssigneeInput!
  create: MaintenanceCreateWithoutAssigneeInput!
}

input MaintenanceUpdateWithoutAssigneeInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  photo: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  from: DateTimeFieldUpdateOperationsInput
  to: DateTimeFieldUpdateOperationsInput
  resolved: BoolFieldUpdateOperationsInput
  metadata: JSON
  un_planned: BoolFieldUpdateOperationsInput
  elapsed: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  machines: MachinesUpdateOneRequiredWithoutMaintenanceNestedInput
  replacements: ReplacementsUpdateManyWithoutMaintenanceNestedInput
  reports: ReportsUpdateManyWithoutMaintenanceNestedInput
  ticket: TicketUpdateOneWithoutMaintenanceNestedInput
}

input ReplacementsUpdateManyWithoutMaintenanceNestedInput {
  create: [ReplacementsCreateWithoutMaintenanceInput!]
  connectOrCreate: [ReplacementsCreateOrConnectWithoutMaintenanceInput!]
  upsert: [ReplacementsUpsertWithWhereUniqueWithoutMaintenanceInput!]
  createMany: ReplacementsCreateManyMaintenanceInputEnvelope
  set: [ReplacementsWhereUniqueInput!]
  disconnect: [ReplacementsWhereUniqueInput!]
  delete: [ReplacementsWhereUniqueInput!]
  connect: [ReplacementsWhereUniqueInput!]
  update: [ReplacementsUpdateWithWhereUniqueWithoutMaintenanceInput!]
  updateMany: [ReplacementsUpdateManyWithWhereWithoutMaintenanceInput!]
  deleteMany: [ReplacementsScalarWhereInput!]
}

input ReplacementsUpsertWithWhereUniqueWithoutMaintenanceInput {
  where: ReplacementsWhereUniqueInput!
  update: ReplacementsUpdateWithoutMaintenanceInput!
  create: ReplacementsCreateWithoutMaintenanceInput!
}

input ReplacementsUpdateWithoutMaintenanceInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  metadata: JSON
  created_at: DateTimeFieldUpdateOperationsInput
  approved: BoolFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  items: ItemsUpdateOneRequiredWithoutReplacementsNestedInput
}

input ItemsUpdateOneRequiredWithoutReplacementsNestedInput {
  create: ItemsCreateWithoutReplacementsInput
  connectOrCreate: ItemsCreateOrConnectWithoutReplacementsInput
  upsert: ItemsUpsertWithoutReplacementsInput
  connect: ItemsWhereUniqueInput
  update: ItemsUpdateWithoutReplacementsInput
}

input ItemsUpsertWithoutReplacementsInput {
  update: ItemsUpdateWithoutReplacementsInput!
  create: ItemsCreateWithoutReplacementsInput!
}

input ItemsUpdateWithoutReplacementsInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unit_price: FloatFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  catagory: catagoryUpdateOneRequiredWithoutItemsNestedInput
}

input FloatFieldUpdateOperationsInput {
  set: Float
  increment: Float
  decrement: Float
  multiply: Float
  divide: Float
}

input catagoryUpdateOneRequiredWithoutItemsNestedInput {
  create: catagoryCreateWithoutItemsInput
  connectOrCreate: catagoryCreateOrConnectWithoutItemsInput
  upsert: catagoryUpsertWithoutItemsInput
  connect: catagoryWhereUniqueInput
  update: catagoryUpdateWithoutItemsInput
}

input catagoryUpsertWithoutItemsInput {
  update: catagoryUpdateWithoutItemsInput!
  create: catagoryCreateWithoutItemsInput!
}

input catagoryUpdateWithoutItemsInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input ReplacementsUpdateWithWhereUniqueWithoutMaintenanceInput {
  where: ReplacementsWhereUniqueInput!
  data: ReplacementsUpdateWithoutMaintenanceInput!
}

input ReplacementsUpdateManyWithWhereWithoutMaintenanceInput {
  where: ReplacementsScalarWhereInput!
  data: ReplacementsUpdateManyMutationInput!
}

input ReplacementsScalarWhereInput {
  AND: [ReplacementsScalarWhereInput!]
  OR: [ReplacementsScalarWhereInput!]
  NOT: [ReplacementsScalarWhereInput!]
  id: BigIntFilter
  name: StringFilter
  description: StringFilter
  quantity: IntFilter
  metadata: JsonFilter
  item_id: BigIntFilter
  maintanance_id: BigIntFilter
  created_at: DateTimeFilter
  approved: BoolFilter
  updated_at: DateTimeFilter
}

input ReplacementsUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  metadata: JSON
  created_at: DateTimeFieldUpdateOperationsInput
  approved: BoolFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input ReportsUpdateManyWithoutMaintenanceNestedInput {
  create: [ReportsCreateWithoutMaintenanceInput!]
  connectOrCreate: [ReportsCreateOrConnectWithoutMaintenanceInput!]
  upsert: [ReportsUpsertWithWhereUniqueWithoutMaintenanceInput!]
  createMany: ReportsCreateManyMaintenanceInputEnvelope
  set: [ReportsWhereUniqueInput!]
  disconnect: [ReportsWhereUniqueInput!]
  delete: [ReportsWhereUniqueInput!]
  connect: [ReportsWhereUniqueInput!]
  update: [ReportsUpdateWithWhereUniqueWithoutMaintenanceInput!]
  updateMany: [ReportsUpdateManyWithWhereWithoutMaintenanceInput!]
  deleteMany: [ReportsScalarWhereInput!]
}

input ReportsUpsertWithWhereUniqueWithoutMaintenanceInput {
  where: ReportsWhereUniqueInput!
  update: ReportsUpdateWithoutMaintenanceInput!
  create: ReportsCreateWithoutMaintenanceInput!
}

input ReportsUpdateWithoutMaintenanceInput {
  id: BigIntFieldUpdateOperationsInput
  report: StringFieldUpdateOperationsInput
  sign: StringFieldUpdateOperationsInput
  tag: JSON
  validated: BigIntFieldUpdateOperationsInput
  validated_sign: BigIntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input ReportsUpdateWithWhereUniqueWithoutMaintenanceInput {
  where: ReportsWhereUniqueInput!
  data: ReportsUpdateWithoutMaintenanceInput!
}

input ReportsUpdateManyWithWhereWithoutMaintenanceInput {
  where: ReportsScalarWhereInput!
  data: ReportsUpdateManyMutationInput!
}

input ReportsScalarWhereInput {
  AND: [ReportsScalarWhereInput!]
  OR: [ReportsScalarWhereInput!]
  NOT: [ReportsScalarWhereInput!]
  id: BigIntFilter
  report: StringFilter
  sign: StringFilter
  tag: JsonFilter
  validated: BigIntFilter
  validated_sign: BigIntFilter
  maintance_id: BigIntFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
}

input ReportsUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  report: StringFieldUpdateOperationsInput
  sign: StringFieldUpdateOperationsInput
  tag: JSON
  validated: BigIntFieldUpdateOperationsInput
  validated_sign: BigIntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input TicketUpdateOneWithoutMaintenanceNestedInput {
  create: TicketCreateWithoutMaintenanceInput
  connectOrCreate: TicketCreateOrConnectWithoutMaintenanceInput
  upsert: TicketUpsertWithoutMaintenanceInput
  disconnect: Boolean
  delete: Boolean
  connect: TicketWhereUniqueInput
  update: TicketUpdateWithoutMaintenanceInput
}

input TicketUpsertWithoutMaintenanceInput {
  update: TicketUpdateWithoutMaintenanceInput!
  create: TicketCreateWithoutMaintenanceInput!
}

input TicketUpdateWithoutMaintenanceInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  photos: StringFieldUpdateOperationsInput
  status: Enumticket_statusFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  machines: MachinesUpdateOneRequiredWithoutTicketNestedInput
}

input MachinesUpdateOneRequiredWithoutTicketNestedInput {
  create: MachinesCreateWithoutTicketInput
  connectOrCreate: MachinesCreateOrConnectWithoutTicketInput
  upsert: MachinesUpsertWithoutTicketInput
  connect: MachinesWhereUniqueInput
  update: MachinesUpdateWithoutTicketInput
}

input MachinesUpsertWithoutTicketInput {
  update: MachinesUpdateWithoutTicketInput!
  create: MachinesCreateWithoutTicketInput!
}

input MachinesUpdateWithoutTicketInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  label: StringFieldUpdateOperationsInput
  profile: JSON
  priority: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  section: SectionsUpdateOneRequiredWithoutMachinesNestedInput
  maintenance: MaintenanceUpdateManyWithoutMachinesNestedInput
  machine_catagory: machine_catagoryUpdateOneRequiredWithoutMachinesNestedInput
  routine_maintanances: routine_maintanancesUpdateManyWithoutMeachineNestedInput
}

input MaintenanceUpdateWithWhereUniqueWithoutAssigneeInput {
  where: MaintenanceWhereUniqueInput!
  data: MaintenanceUpdateWithoutAssigneeInput!
}

input MaintenanceUpdateManyWithWhereWithoutAssigneeInput {
  where: MaintenanceScalarWhereInput!
  data: MaintenanceUpdateManyMutationInput!
}

input MaintenanceScalarWhereInput {
  AND: [MaintenanceScalarWhereInput!]
  OR: [MaintenanceScalarWhereInput!]
  NOT: [MaintenanceScalarWhereInput!]
  id: BigIntFilter
  name: StringFilter
  photo: StringNullableFilter
  description: StringFilter
  from: DateTimeFilter
  to: DateTimeFilter
  resolved: BoolFilter
  metadata: JsonFilter
  un_planned: BoolFilter
  elapsed: DateTimeNullableFilter
  assignee_id: BigIntFilter
  machine_id: BigIntFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
}

input MaintenanceUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  photo: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  from: DateTimeFieldUpdateOperationsInput
  to: DateTimeFieldUpdateOperationsInput
  resolved: BoolFieldUpdateOperationsInput
  metadata: JSON
  un_planned: BoolFieldUpdateOperationsInput
  elapsed: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input production_dataUpdateManyWithoutUpdatedByNestedInput {
  create: [production_dataCreateWithoutUpdatedByInput!]
  connectOrCreate: [production_dataCreateOrConnectWithoutUpdatedByInput!]
  upsert: [production_dataUpsertWithWhereUniqueWithoutUpdatedByInput!]
  createMany: production_dataCreateManyUpdatedByInputEnvelope
  set: [production_dataWhereUniqueInput!]
  disconnect: [production_dataWhereUniqueInput!]
  delete: [production_dataWhereUniqueInput!]
  connect: [production_dataWhereUniqueInput!]
  update: [production_dataUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [production_dataUpdateManyWithWhereWithoutUpdatedByInput!]
  deleteMany: [production_dataScalarWhereInput!]
}

input production_dataUpsertWithWhereUniqueWithoutUpdatedByInput {
  where: production_dataWhereUniqueInput!
  update: production_dataUpdateWithoutUpdatedByInput!
  create: production_dataCreateWithoutUpdatedByInput!
}

input production_dataUpdateWithoutUpdatedByInput {
  id: BigIntFieldUpdateOperationsInput
  production: JSON
  shift: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input production_dataUpdateWithWhereUniqueWithoutUpdatedByInput {
  where: production_dataWhereUniqueInput!
  data: production_dataUpdateWithoutUpdatedByInput!
}

input production_dataUpdateManyWithWhereWithoutUpdatedByInput {
  where: production_dataScalarWhereInput!
  data: production_dataUpdateManyMutationInput!
}

input production_dataScalarWhereInput {
  AND: [production_dataScalarWhereInput!]
  OR: [production_dataScalarWhereInput!]
  NOT: [production_dataScalarWhereInput!]
  id: BigIntFilter
  production: JsonFilter
  shift: StringFilter
  date: DateTimeFilter
  updated_by: BigIntFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
}

input production_dataUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  production: JSON
  shift: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input routine_maintanancesUpdateWithWhereUniqueWithoutMeachineInput {
  where: routine_maintanancesWhereUniqueInput!
  data: routine_maintanancesUpdateWithoutMeachineInput!
}

input routine_maintanancesUpdateManyWithWhereWithoutMeachineInput {
  where: routine_maintanancesScalarWhereInput!
  data: routine_maintanancesUpdateManyMutationInput!
}

input routine_maintanancesScalarWhereInput {
  AND: [routine_maintanancesScalarWhereInput!]
  OR: [routine_maintanancesScalarWhereInput!]
  NOT: [routine_maintanancesScalarWhereInput!]
  id: BigIntFilter
  name: StringFilter
  description: StringFilter
  cron: StringFilter
  duration: IntFilter
  assignee_id: BigIntFilter
  meachine_id: BigIntFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
}

input routine_maintanancesUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  cron: StringFieldUpdateOperationsInput
  duration: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input TicketUpdateWithWhereUniqueWithoutUserInput {
  where: TicketWhereUniqueInput!
  data: TicketUpdateWithoutUserInput!
}

input TicketUpdateManyWithWhereWithoutUserInput {
  where: TicketScalarWhereInput!
  data: TicketUpdateManyMutationInput!
}

input routine_maintanancesUpdateManyWithoutAssigneeNestedInput {
  create: [routine_maintanancesCreateWithoutAssigneeInput!]
  connectOrCreate: [routine_maintanancesCreateOrConnectWithoutAssigneeInput!]
  upsert: [routine_maintanancesUpsertWithWhereUniqueWithoutAssigneeInput!]
  createMany: routine_maintanancesCreateManyAssigneeInputEnvelope
  set: [routine_maintanancesWhereUniqueInput!]
  disconnect: [routine_maintanancesWhereUniqueInput!]
  delete: [routine_maintanancesWhereUniqueInput!]
  connect: [routine_maintanancesWhereUniqueInput!]
  update: [routine_maintanancesUpdateWithWhereUniqueWithoutAssigneeInput!]
  updateMany: [routine_maintanancesUpdateManyWithWhereWithoutAssigneeInput!]
  deleteMany: [routine_maintanancesScalarWhereInput!]
}

input routine_maintanancesUpsertWithWhereUniqueWithoutAssigneeInput {
  where: routine_maintanancesWhereUniqueInput!
  update: routine_maintanancesUpdateWithoutAssigneeInput!
  create: routine_maintanancesCreateWithoutAssigneeInput!
}

input routine_maintanancesUpdateWithoutAssigneeInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  cron: StringFieldUpdateOperationsInput
  duration: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  meachine: MachinesUpdateOneRequiredWithoutRoutine_maintanancesNestedInput
}

input MachinesUpdateOneRequiredWithoutRoutine_maintanancesNestedInput {
  create: MachinesCreateWithoutRoutine_maintanancesInput
  connectOrCreate: MachinesCreateOrConnectWithoutRoutine_maintanancesInput
  upsert: MachinesUpsertWithoutRoutine_maintanancesInput
  connect: MachinesWhereUniqueInput
  update: MachinesUpdateWithoutRoutine_maintanancesInput
}

input MachinesUpsertWithoutRoutine_maintanancesInput {
  update: MachinesUpdateWithoutRoutine_maintanancesInput!
  create: MachinesCreateWithoutRoutine_maintanancesInput!
}

input MachinesUpdateWithoutRoutine_maintanancesInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  label: StringFieldUpdateOperationsInput
  profile: JSON
  priority: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  section: SectionsUpdateOneRequiredWithoutMachinesNestedInput
  maintenance: MaintenanceUpdateManyWithoutMachinesNestedInput
  Ticket: TicketUpdateManyWithoutMachinesNestedInput
  machine_catagory: machine_catagoryUpdateOneRequiredWithoutMachinesNestedInput
}

input routine_maintanancesUpdateWithWhereUniqueWithoutAssigneeInput {
  where: routine_maintanancesWhereUniqueInput!
  data: routine_maintanancesUpdateWithoutAssigneeInput!
}

input routine_maintanancesUpdateManyWithWhereWithoutAssigneeInput {
  where: routine_maintanancesScalarWhereInput!
  data: routine_maintanancesUpdateManyMutationInput!
}

input MaintenanceUpdateWithWhereUniqueWithoutMachinesInput {
  where: MaintenanceWhereUniqueInput!
  data: MaintenanceUpdateWithoutMachinesInput!
}

input MaintenanceUpdateManyWithWhereWithoutMachinesInput {
  where: MaintenanceScalarWhereInput!
  data: MaintenanceUpdateManyMutationInput!
}

input MachinesUpdateWithWhereUniqueWithoutBlockInput {
  where: MachinesWhereUniqueInput!
  data: MachinesUpdateWithoutBlockInput!
}

input MachinesUpdateManyWithWhereWithoutBlockInput {
  where: MachinesScalarWhereInput!
  data: MachinesUpdateManyMutationInput!
}

input MachinesScalarWhereInput {
  AND: [MachinesScalarWhereInput!]
  OR: [MachinesScalarWhereInput!]
  NOT: [MachinesScalarWhereInput!]
  id: BigIntFilter
  name: StringFilter
  section_id: BigIntFilter
  label: StringFilter
  profile: JsonFilter
  priority: IntFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  machine_catagory_id: BigIntFilter
}

input MachinesUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  label: StringFieldUpdateOperationsInput
  profile: JSON
  priority: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input UsersUpdateManyWithoutBlockNestedInput {
  create: [UsersCreateWithoutBlockInput!]
  connectOrCreate: [UsersCreateOrConnectWithoutBlockInput!]
  upsert: [UsersUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: UsersCreateManyBlockInputEnvelope
  set: [UsersWhereUniqueInput!]
  disconnect: [UsersWhereUniqueInput!]
  delete: [UsersWhereUniqueInput!]
  connect: [UsersWhereUniqueInput!]
  update: [UsersUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [UsersUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [UsersScalarWhereInput!]
}

input UsersUpsertWithWhereUniqueWithoutBlockInput {
  where: UsersWhereUniqueInput!
  update: UsersUpdateWithoutBlockInput!
  create: UsersCreateWithoutBlockInput!
}

input UsersUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  profile: JSON
  phone: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  extra_roles: UsersUpdateextra_rolesInput
  role_alias: StringFieldUpdateOperationsInput
  maintenance: MaintenanceUpdateManyWithoutAssigneeNestedInput
  ticket: TicketUpdateManyWithoutUserNestedInput
  routine_maintanances: routine_maintanancesUpdateManyWithoutAssigneeNestedInput
  production_data: production_dataUpdateManyWithoutUpdatedByNestedInput
}

input UsersUpdateWithWhereUniqueWithoutBlockInput {
  where: UsersWhereUniqueInput!
  data: UsersUpdateWithoutBlockInput!
}

input UsersUpdateManyWithWhereWithoutBlockInput {
  where: UsersScalarWhereInput!
  data: UsersUpdateManyMutationInput!
}

input UsersScalarWhereInput {
  AND: [UsersScalarWhereInput!]
  OR: [UsersScalarWhereInput!]
  NOT: [UsersScalarWhereInput!]
  id: BigIntFilter
  profile: JsonFilter
  phone: StringFilter
  name: StringFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
  role: EnumRoleFilter
  extra_roles: EnumRoleNullableListFilter
  role_alias: StringFilter
}

input UsersUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  profile: JSON
  phone: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  extra_roles: UsersUpdateextra_rolesInput
  role_alias: StringFieldUpdateOperationsInput
}

input block_settingsUpdateManyWithoutBlockNestedInput {
  create: [block_settingsCreateWithoutBlockInput!]
  connectOrCreate: [block_settingsCreateOrConnectWithoutBlockInput!]
  upsert: [block_settingsUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: block_settingsCreateManyBlockInputEnvelope
  set: [block_settingsWhereUniqueInput!]
  disconnect: [block_settingsWhereUniqueInput!]
  delete: [block_settingsWhereUniqueInput!]
  connect: [block_settingsWhereUniqueInput!]
  update: [block_settingsUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [block_settingsUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [block_settingsScalarWhereInput!]
}

input block_settingsUpsertWithWhereUniqueWithoutBlockInput {
  where: block_settingsWhereUniqueInput!
  update: block_settingsUpdateWithoutBlockInput!
  create: block_settingsCreateWithoutBlockInput!
}

input block_settingsUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  value: JSON
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input block_settingsUpdateWithWhereUniqueWithoutBlockInput {
  where: block_settingsWhereUniqueInput!
  data: block_settingsUpdateWithoutBlockInput!
}

input block_settingsUpdateManyWithWhereWithoutBlockInput {
  where: block_settingsScalarWhereInput!
  data: block_settingsUpdateManyMutationInput!
}

input block_settingsScalarWhereInput {
  AND: [block_settingsScalarWhereInput!]
  OR: [block_settingsScalarWhereInput!]
  NOT: [block_settingsScalarWhereInput!]
  id: BigIntFilter
  block_id: BigIntFilter
  name: StringFilter
  value: JsonFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
}

input block_settingsUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  value: JSON
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input production_dataUpdateManyWithoutBlockNestedInput {
  create: [production_dataCreateWithoutBlockInput!]
  connectOrCreate: [production_dataCreateOrConnectWithoutBlockInput!]
  upsert: [production_dataUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: production_dataCreateManyBlockInputEnvelope
  set: [production_dataWhereUniqueInput!]
  disconnect: [production_dataWhereUniqueInput!]
  delete: [production_dataWhereUniqueInput!]
  connect: [production_dataWhereUniqueInput!]
  update: [production_dataUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [production_dataUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [production_dataScalarWhereInput!]
}

input production_dataUpsertWithWhereUniqueWithoutBlockInput {
  where: production_dataWhereUniqueInput!
  update: production_dataUpdateWithoutBlockInput!
  create: production_dataCreateWithoutBlockInput!
}

input production_dataUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  production: JSON
  shift: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  updatedBy: UsersUpdateOneRequiredWithoutProduction_dataNestedInput
}

input UsersUpdateOneRequiredWithoutProduction_dataNestedInput {
  create: UsersCreateWithoutProduction_dataInput
  connectOrCreate: UsersCreateOrConnectWithoutProduction_dataInput
  upsert: UsersUpsertWithoutProduction_dataInput
  connect: UsersWhereUniqueInput
  update: UsersUpdateWithoutProduction_dataInput
}

input UsersUpsertWithoutProduction_dataInput {
  update: UsersUpdateWithoutProduction_dataInput!
  create: UsersCreateWithoutProduction_dataInput!
}

input UsersUpdateWithoutProduction_dataInput {
  id: BigIntFieldUpdateOperationsInput
  profile: JSON
  phone: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  extra_roles: UsersUpdateextra_rolesInput
  role_alias: StringFieldUpdateOperationsInput
  maintenance: MaintenanceUpdateManyWithoutAssigneeNestedInput
  ticket: TicketUpdateManyWithoutUserNestedInput
  routine_maintanances: routine_maintanancesUpdateManyWithoutAssigneeNestedInput
}

input production_dataUpdateWithWhereUniqueWithoutBlockInput {
  where: production_dataWhereUniqueInput!
  data: production_dataUpdateWithoutBlockInput!
}

input production_dataUpdateManyWithWhereWithoutBlockInput {
  where: production_dataScalarWhereInput!
  data: production_dataUpdateManyMutationInput!
}

input catagoryUpdateManyWithoutBlockNestedInput {
  create: [catagoryCreateWithoutBlockInput!]
  connectOrCreate: [catagoryCreateOrConnectWithoutBlockInput!]
  upsert: [catagoryUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: catagoryCreateManyBlockInputEnvelope
  set: [catagoryWhereUniqueInput!]
  disconnect: [catagoryWhereUniqueInput!]
  delete: [catagoryWhereUniqueInput!]
  connect: [catagoryWhereUniqueInput!]
  update: [catagoryUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [catagoryUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [catagoryScalarWhereInput!]
}

input catagoryUpsertWithWhereUniqueWithoutBlockInput {
  where: catagoryWhereUniqueInput!
  update: catagoryUpdateWithoutBlockInput!
  create: catagoryCreateWithoutBlockInput!
}

input catagoryUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  items: ItemsUpdateManyWithoutCatagoryNestedInput
}

input ItemsUpdateManyWithoutCatagoryNestedInput {
  create: [ItemsCreateWithoutCatagoryInput!]
  connectOrCreate: [ItemsCreateOrConnectWithoutCatagoryInput!]
  upsert: [ItemsUpsertWithWhereUniqueWithoutCatagoryInput!]
  createMany: ItemsCreateManyCatagoryInputEnvelope
  set: [ItemsWhereUniqueInput!]
  disconnect: [ItemsWhereUniqueInput!]
  delete: [ItemsWhereUniqueInput!]
  connect: [ItemsWhereUniqueInput!]
  update: [ItemsUpdateWithWhereUniqueWithoutCatagoryInput!]
  updateMany: [ItemsUpdateManyWithWhereWithoutCatagoryInput!]
  deleteMany: [ItemsScalarWhereInput!]
}

input ItemsUpsertWithWhereUniqueWithoutCatagoryInput {
  where: ItemsWhereUniqueInput!
  update: ItemsUpdateWithoutCatagoryInput!
  create: ItemsCreateWithoutCatagoryInput!
}

input ItemsUpdateWithoutCatagoryInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unit_price: FloatFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  replacements: ReplacementsUpdateManyWithoutItemsNestedInput
}

input ReplacementsUpdateManyWithoutItemsNestedInput {
  create: [ReplacementsCreateWithoutItemsInput!]
  connectOrCreate: [ReplacementsCreateOrConnectWithoutItemsInput!]
  upsert: [ReplacementsUpsertWithWhereUniqueWithoutItemsInput!]
  createMany: ReplacementsCreateManyItemsInputEnvelope
  set: [ReplacementsWhereUniqueInput!]
  disconnect: [ReplacementsWhereUniqueInput!]
  delete: [ReplacementsWhereUniqueInput!]
  connect: [ReplacementsWhereUniqueInput!]
  update: [ReplacementsUpdateWithWhereUniqueWithoutItemsInput!]
  updateMany: [ReplacementsUpdateManyWithWhereWithoutItemsInput!]
  deleteMany: [ReplacementsScalarWhereInput!]
}

input ReplacementsUpsertWithWhereUniqueWithoutItemsInput {
  where: ReplacementsWhereUniqueInput!
  update: ReplacementsUpdateWithoutItemsInput!
  create: ReplacementsCreateWithoutItemsInput!
}

input ReplacementsUpdateWithoutItemsInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  metadata: JSON
  created_at: DateTimeFieldUpdateOperationsInput
  approved: BoolFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  maintenance: MaintenanceUpdateOneRequiredWithoutReplacementsNestedInput
}

input MaintenanceUpdateOneRequiredWithoutReplacementsNestedInput {
  create: MaintenanceCreateWithoutReplacementsInput
  connectOrCreate: MaintenanceCreateOrConnectWithoutReplacementsInput
  upsert: MaintenanceUpsertWithoutReplacementsInput
  connect: MaintenanceWhereUniqueInput
  update: MaintenanceUpdateWithoutReplacementsInput
}

input MaintenanceUpsertWithoutReplacementsInput {
  update: MaintenanceUpdateWithoutReplacementsInput!
  create: MaintenanceCreateWithoutReplacementsInput!
}

input MaintenanceUpdateWithoutReplacementsInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  photo: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  from: DateTimeFieldUpdateOperationsInput
  to: DateTimeFieldUpdateOperationsInput
  resolved: BoolFieldUpdateOperationsInput
  metadata: JSON
  un_planned: BoolFieldUpdateOperationsInput
  elapsed: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  assignee: UsersUpdateOneRequiredWithoutMaintenanceNestedInput
  machines: MachinesUpdateOneRequiredWithoutMaintenanceNestedInput
  reports: ReportsUpdateManyWithoutMaintenanceNestedInput
  ticket: TicketUpdateOneWithoutMaintenanceNestedInput
}

input ReplacementsUpdateWithWhereUniqueWithoutItemsInput {
  where: ReplacementsWhereUniqueInput!
  data: ReplacementsUpdateWithoutItemsInput!
}

input ReplacementsUpdateManyWithWhereWithoutItemsInput {
  where: ReplacementsScalarWhereInput!
  data: ReplacementsUpdateManyMutationInput!
}

input ItemsUpdateWithWhereUniqueWithoutCatagoryInput {
  where: ItemsWhereUniqueInput!
  data: ItemsUpdateWithoutCatagoryInput!
}

input ItemsUpdateManyWithWhereWithoutCatagoryInput {
  where: ItemsScalarWhereInput!
  data: ItemsUpdateManyMutationInput!
}

input ItemsScalarWhereInput {
  AND: [ItemsScalarWhereInput!]
  OR: [ItemsScalarWhereInput!]
  NOT: [ItemsScalarWhereInput!]
  id: BigIntFilter
  name: StringFilter
  code: StringFilter
  quantity: IntFilter
  unit_price: FloatFilter
  catagory_id: BigIntFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
}

input ItemsUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unit_price: FloatFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input catagoryUpdateWithWhereUniqueWithoutBlockInput {
  where: catagoryWhereUniqueInput!
  data: catagoryUpdateWithoutBlockInput!
}

input catagoryUpdateManyWithWhereWithoutBlockInput {
  where: catagoryScalarWhereInput!
  data: catagoryUpdateManyMutationInput!
}

input catagoryScalarWhereInput {
  AND: [catagoryScalarWhereInput!]
  OR: [catagoryScalarWhereInput!]
  NOT: [catagoryScalarWhereInput!]
  id: BigIntFilter
  name: StringFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
}

input catagoryUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input ItemsUpdateManyWithoutBlockNestedInput {
  create: [ItemsCreateWithoutBlockInput!]
  connectOrCreate: [ItemsCreateOrConnectWithoutBlockInput!]
  upsert: [ItemsUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: ItemsCreateManyBlockInputEnvelope
  set: [ItemsWhereUniqueInput!]
  disconnect: [ItemsWhereUniqueInput!]
  delete: [ItemsWhereUniqueInput!]
  connect: [ItemsWhereUniqueInput!]
  update: [ItemsUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [ItemsUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [ItemsScalarWhereInput!]
}

input ItemsUpsertWithWhereUniqueWithoutBlockInput {
  where: ItemsWhereUniqueInput!
  update: ItemsUpdateWithoutBlockInput!
  create: ItemsCreateWithoutBlockInput!
}

input ItemsUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unit_price: FloatFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  catagory: catagoryUpdateOneRequiredWithoutItemsNestedInput
  replacements: ReplacementsUpdateManyWithoutItemsNestedInput
}

input ItemsUpdateWithWhereUniqueWithoutBlockInput {
  where: ItemsWhereUniqueInput!
  data: ItemsUpdateWithoutBlockInput!
}

input ItemsUpdateManyWithWhereWithoutBlockInput {
  where: ItemsScalarWhereInput!
  data: ItemsUpdateManyMutationInput!
}

input machine_catagoryUpdateManyWithoutBlockNestedInput {
  create: [machine_catagoryCreateWithoutBlockInput!]
  connectOrCreate: [machine_catagoryCreateOrConnectWithoutBlockInput!]
  upsert: [machine_catagoryUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: machine_catagoryCreateManyBlockInputEnvelope
  set: [machine_catagoryWhereUniqueInput!]
  disconnect: [machine_catagoryWhereUniqueInput!]
  delete: [machine_catagoryWhereUniqueInput!]
  connect: [machine_catagoryWhereUniqueInput!]
  update: [machine_catagoryUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [machine_catagoryUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [machine_catagoryScalarWhereInput!]
}

input machine_catagoryUpsertWithWhereUniqueWithoutBlockInput {
  where: machine_catagoryWhereUniqueInput!
  update: machine_catagoryUpdateWithoutBlockInput!
  create: machine_catagoryCreateWithoutBlockInput!
}

input machine_catagoryUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  machines: MachinesUpdateManyWithoutMachine_catagoryNestedInput
}

input MachinesUpdateManyWithoutMachine_catagoryNestedInput {
  create: [MachinesCreateWithoutMachine_catagoryInput!]
  connectOrCreate: [MachinesCreateOrConnectWithoutMachine_catagoryInput!]
  upsert: [MachinesUpsertWithWhereUniqueWithoutMachine_catagoryInput!]
  createMany: MachinesCreateManyMachine_catagoryInputEnvelope
  set: [MachinesWhereUniqueInput!]
  disconnect: [MachinesWhereUniqueInput!]
  delete: [MachinesWhereUniqueInput!]
  connect: [MachinesWhereUniqueInput!]
  update: [MachinesUpdateWithWhereUniqueWithoutMachine_catagoryInput!]
  updateMany: [MachinesUpdateManyWithWhereWithoutMachine_catagoryInput!]
  deleteMany: [MachinesScalarWhereInput!]
}

input MachinesUpsertWithWhereUniqueWithoutMachine_catagoryInput {
  where: MachinesWhereUniqueInput!
  update: MachinesUpdateWithoutMachine_catagoryInput!
  create: MachinesCreateWithoutMachine_catagoryInput!
}

input MachinesUpdateWithoutMachine_catagoryInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  label: StringFieldUpdateOperationsInput
  profile: JSON
  priority: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  section: SectionsUpdateOneRequiredWithoutMachinesNestedInput
  maintenance: MaintenanceUpdateManyWithoutMachinesNestedInput
  Ticket: TicketUpdateManyWithoutMachinesNestedInput
  routine_maintanances: routine_maintanancesUpdateManyWithoutMeachineNestedInput
}

input MachinesUpdateWithWhereUniqueWithoutMachine_catagoryInput {
  where: MachinesWhereUniqueInput!
  data: MachinesUpdateWithoutMachine_catagoryInput!
}

input MachinesUpdateManyWithWhereWithoutMachine_catagoryInput {
  where: MachinesScalarWhereInput!
  data: MachinesUpdateManyMutationInput!
}

input machine_catagoryUpdateWithWhereUniqueWithoutBlockInput {
  where: machine_catagoryWhereUniqueInput!
  data: machine_catagoryUpdateWithoutBlockInput!
}

input machine_catagoryUpdateManyWithWhereWithoutBlockInput {
  where: machine_catagoryScalarWhereInput!
  data: machine_catagoryUpdateManyMutationInput!
}

input machine_catagoryScalarWhereInput {
  AND: [machine_catagoryScalarWhereInput!]
  OR: [machine_catagoryScalarWhereInput!]
  NOT: [machine_catagoryScalarWhereInput!]
  id: BigIntFilter
  name: StringFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
}

input machine_catagoryUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input MaintenanceUpdateManyWithoutBlockNestedInput {
  create: [MaintenanceCreateWithoutBlockInput!]
  connectOrCreate: [MaintenanceCreateOrConnectWithoutBlockInput!]
  upsert: [MaintenanceUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: MaintenanceCreateManyBlockInputEnvelope
  set: [MaintenanceWhereUniqueInput!]
  disconnect: [MaintenanceWhereUniqueInput!]
  delete: [MaintenanceWhereUniqueInput!]
  connect: [MaintenanceWhereUniqueInput!]
  update: [MaintenanceUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [MaintenanceUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [MaintenanceScalarWhereInput!]
}

input MaintenanceUpsertWithWhereUniqueWithoutBlockInput {
  where: MaintenanceWhereUniqueInput!
  update: MaintenanceUpdateWithoutBlockInput!
  create: MaintenanceCreateWithoutBlockInput!
}

input MaintenanceUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  photo: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  from: DateTimeFieldUpdateOperationsInput
  to: DateTimeFieldUpdateOperationsInput
  resolved: BoolFieldUpdateOperationsInput
  metadata: JSON
  un_planned: BoolFieldUpdateOperationsInput
  elapsed: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  assignee: UsersUpdateOneRequiredWithoutMaintenanceNestedInput
  machines: MachinesUpdateOneRequiredWithoutMaintenanceNestedInput
  replacements: ReplacementsUpdateManyWithoutMaintenanceNestedInput
  reports: ReportsUpdateManyWithoutMaintenanceNestedInput
  ticket: TicketUpdateOneWithoutMaintenanceNestedInput
}

input MaintenanceUpdateWithWhereUniqueWithoutBlockInput {
  where: MaintenanceWhereUniqueInput!
  data: MaintenanceUpdateWithoutBlockInput!
}

input MaintenanceUpdateManyWithWhereWithoutBlockInput {
  where: MaintenanceScalarWhereInput!
  data: MaintenanceUpdateManyMutationInput!
}

input ReplacementsUpdateManyWithoutBlockNestedInput {
  create: [ReplacementsCreateWithoutBlockInput!]
  connectOrCreate: [ReplacementsCreateOrConnectWithoutBlockInput!]
  upsert: [ReplacementsUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: ReplacementsCreateManyBlockInputEnvelope
  set: [ReplacementsWhereUniqueInput!]
  disconnect: [ReplacementsWhereUniqueInput!]
  delete: [ReplacementsWhereUniqueInput!]
  connect: [ReplacementsWhereUniqueInput!]
  update: [ReplacementsUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [ReplacementsUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [ReplacementsScalarWhereInput!]
}

input ReplacementsUpsertWithWhereUniqueWithoutBlockInput {
  where: ReplacementsWhereUniqueInput!
  update: ReplacementsUpdateWithoutBlockInput!
  create: ReplacementsCreateWithoutBlockInput!
}

input ReplacementsUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  metadata: JSON
  created_at: DateTimeFieldUpdateOperationsInput
  approved: BoolFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  items: ItemsUpdateOneRequiredWithoutReplacementsNestedInput
  maintenance: MaintenanceUpdateOneRequiredWithoutReplacementsNestedInput
}

input ReplacementsUpdateWithWhereUniqueWithoutBlockInput {
  where: ReplacementsWhereUniqueInput!
  data: ReplacementsUpdateWithoutBlockInput!
}

input ReplacementsUpdateManyWithWhereWithoutBlockInput {
  where: ReplacementsScalarWhereInput!
  data: ReplacementsUpdateManyMutationInput!
}

input ReportsUpdateManyWithoutBlockNestedInput {
  create: [ReportsCreateWithoutBlockInput!]
  connectOrCreate: [ReportsCreateOrConnectWithoutBlockInput!]
  upsert: [ReportsUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: ReportsCreateManyBlockInputEnvelope
  set: [ReportsWhereUniqueInput!]
  disconnect: [ReportsWhereUniqueInput!]
  delete: [ReportsWhereUniqueInput!]
  connect: [ReportsWhereUniqueInput!]
  update: [ReportsUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [ReportsUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [ReportsScalarWhereInput!]
}

input ReportsUpsertWithWhereUniqueWithoutBlockInput {
  where: ReportsWhereUniqueInput!
  update: ReportsUpdateWithoutBlockInput!
  create: ReportsCreateWithoutBlockInput!
}

input ReportsUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  report: StringFieldUpdateOperationsInput
  sign: StringFieldUpdateOperationsInput
  tag: JSON
  validated: BigIntFieldUpdateOperationsInput
  validated_sign: BigIntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  maintenance: MaintenanceUpdateOneRequiredWithoutReportsNestedInput
}

input MaintenanceUpdateOneRequiredWithoutReportsNestedInput {
  create: MaintenanceCreateWithoutReportsInput
  connectOrCreate: MaintenanceCreateOrConnectWithoutReportsInput
  upsert: MaintenanceUpsertWithoutReportsInput
  connect: MaintenanceWhereUniqueInput
  update: MaintenanceUpdateWithoutReportsInput
}

input MaintenanceUpsertWithoutReportsInput {
  update: MaintenanceUpdateWithoutReportsInput!
  create: MaintenanceCreateWithoutReportsInput!
}

input MaintenanceUpdateWithoutReportsInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  photo: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  from: DateTimeFieldUpdateOperationsInput
  to: DateTimeFieldUpdateOperationsInput
  resolved: BoolFieldUpdateOperationsInput
  metadata: JSON
  un_planned: BoolFieldUpdateOperationsInput
  elapsed: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  assignee: UsersUpdateOneRequiredWithoutMaintenanceNestedInput
  machines: MachinesUpdateOneRequiredWithoutMaintenanceNestedInput
  replacements: ReplacementsUpdateManyWithoutMaintenanceNestedInput
  ticket: TicketUpdateOneWithoutMaintenanceNestedInput
}

input ReportsUpdateWithWhereUniqueWithoutBlockInput {
  where: ReportsWhereUniqueInput!
  data: ReportsUpdateWithoutBlockInput!
}

input ReportsUpdateManyWithWhereWithoutBlockInput {
  where: ReportsScalarWhereInput!
  data: ReportsUpdateManyMutationInput!
}

input SectionsUpdateManyWithoutBlockNestedInput {
  create: [SectionsCreateWithoutBlockInput!]
  connectOrCreate: [SectionsCreateOrConnectWithoutBlockInput!]
  upsert: [SectionsUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: SectionsCreateManyBlockInputEnvelope
  set: [SectionsWhereUniqueInput!]
  disconnect: [SectionsWhereUniqueInput!]
  delete: [SectionsWhereUniqueInput!]
  connect: [SectionsWhereUniqueInput!]
  update: [SectionsUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [SectionsUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [SectionsScalarWhereInput!]
}

input SectionsUpsertWithWhereUniqueWithoutBlockInput {
  where: SectionsWhereUniqueInput!
  update: SectionsUpdateWithoutBlockInput!
  create: SectionsCreateWithoutBlockInput!
}

input SectionsUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  machines: MachinesUpdateManyWithoutSectionNestedInput
}

input MachinesUpdateManyWithoutSectionNestedInput {
  create: [MachinesCreateWithoutSectionInput!]
  connectOrCreate: [MachinesCreateOrConnectWithoutSectionInput!]
  upsert: [MachinesUpsertWithWhereUniqueWithoutSectionInput!]
  createMany: MachinesCreateManySectionInputEnvelope
  set: [MachinesWhereUniqueInput!]
  disconnect: [MachinesWhereUniqueInput!]
  delete: [MachinesWhereUniqueInput!]
  connect: [MachinesWhereUniqueInput!]
  update: [MachinesUpdateWithWhereUniqueWithoutSectionInput!]
  updateMany: [MachinesUpdateManyWithWhereWithoutSectionInput!]
  deleteMany: [MachinesScalarWhereInput!]
}

input MachinesUpsertWithWhereUniqueWithoutSectionInput {
  where: MachinesWhereUniqueInput!
  update: MachinesUpdateWithoutSectionInput!
  create: MachinesCreateWithoutSectionInput!
}

input MachinesUpdateWithoutSectionInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  label: StringFieldUpdateOperationsInput
  profile: JSON
  priority: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  maintenance: MaintenanceUpdateManyWithoutMachinesNestedInput
  Ticket: TicketUpdateManyWithoutMachinesNestedInput
  machine_catagory: machine_catagoryUpdateOneRequiredWithoutMachinesNestedInput
  routine_maintanances: routine_maintanancesUpdateManyWithoutMeachineNestedInput
}

input MachinesUpdateWithWhereUniqueWithoutSectionInput {
  where: MachinesWhereUniqueInput!
  data: MachinesUpdateWithoutSectionInput!
}

input MachinesUpdateManyWithWhereWithoutSectionInput {
  where: MachinesScalarWhereInput!
  data: MachinesUpdateManyMutationInput!
}

input SectionsUpdateWithWhereUniqueWithoutBlockInput {
  where: SectionsWhereUniqueInput!
  data: SectionsUpdateWithoutBlockInput!
}

input SectionsUpdateManyWithWhereWithoutBlockInput {
  where: SectionsScalarWhereInput!
  data: SectionsUpdateManyMutationInput!
}

input SectionsScalarWhereInput {
  AND: [SectionsScalarWhereInput!]
  OR: [SectionsScalarWhereInput!]
  NOT: [SectionsScalarWhereInput!]
  id: BigIntFilter
  name: StringFilter
  created_at: DateTimeFilter
  updated_at: DateTimeFilter
}

input SectionsUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input TicketUpdateManyWithoutBlockNestedInput {
  create: [TicketCreateWithoutBlockInput!]
  connectOrCreate: [TicketCreateOrConnectWithoutBlockInput!]
  upsert: [TicketUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: TicketCreateManyBlockInputEnvelope
  set: [TicketWhereUniqueInput!]
  disconnect: [TicketWhereUniqueInput!]
  delete: [TicketWhereUniqueInput!]
  connect: [TicketWhereUniqueInput!]
  update: [TicketUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [TicketUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [TicketScalarWhereInput!]
}

input TicketUpsertWithWhereUniqueWithoutBlockInput {
  where: TicketWhereUniqueInput!
  update: TicketUpdateWithoutBlockInput!
  create: TicketCreateWithoutBlockInput!
}

input TicketUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  photos: StringFieldUpdateOperationsInput
  status: Enumticket_statusFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  maintenance: MaintenanceUpdateOneWithoutTicketNestedInput
  machines: MachinesUpdateOneRequiredWithoutTicketNestedInput
}

input TicketUpdateWithWhereUniqueWithoutBlockInput {
  where: TicketWhereUniqueInput!
  data: TicketUpdateWithoutBlockInput!
}

input TicketUpdateManyWithWhereWithoutBlockInput {
  where: TicketScalarWhereInput!
  data: TicketUpdateManyMutationInput!
}

input routine_maintanancesUpdateManyWithoutBlockNestedInput {
  create: [routine_maintanancesCreateWithoutBlockInput!]
  connectOrCreate: [routine_maintanancesCreateOrConnectWithoutBlockInput!]
  upsert: [routine_maintanancesUpsertWithWhereUniqueWithoutBlockInput!]
  createMany: routine_maintanancesCreateManyBlockInputEnvelope
  set: [routine_maintanancesWhereUniqueInput!]
  disconnect: [routine_maintanancesWhereUniqueInput!]
  delete: [routine_maintanancesWhereUniqueInput!]
  connect: [routine_maintanancesWhereUniqueInput!]
  update: [routine_maintanancesUpdateWithWhereUniqueWithoutBlockInput!]
  updateMany: [routine_maintanancesUpdateManyWithWhereWithoutBlockInput!]
  deleteMany: [routine_maintanancesScalarWhereInput!]
}

input routine_maintanancesUpsertWithWhereUniqueWithoutBlockInput {
  where: routine_maintanancesWhereUniqueInput!
  update: routine_maintanancesUpdateWithoutBlockInput!
  create: routine_maintanancesCreateWithoutBlockInput!
}

input routine_maintanancesUpdateWithoutBlockInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  cron: StringFieldUpdateOperationsInput
  duration: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  assignee: UsersUpdateOneRequiredWithoutRoutine_maintanancesNestedInput
  meachine: MachinesUpdateOneRequiredWithoutRoutine_maintanancesNestedInput
}

input routine_maintanancesUpdateWithWhereUniqueWithoutBlockInput {
  where: routine_maintanancesWhereUniqueInput!
  data: routine_maintanancesUpdateWithoutBlockInput!
}

input routine_maintanancesUpdateManyWithWhereWithoutBlockInput {
  where: routine_maintanancesScalarWhereInput!
  data: routine_maintanancesUpdateManyMutationInput!
}

input ItemCatagoryCreateInput {
  id: String
  name: String!
  items: ItemsCreateNestedManyWithoutItemCatagoryInput
  created_at: DateTime
  updated_at: DateTime
}

input ItemsCreateNestedManyWithoutItemCatagoryInput {
  create: [ItemsCreateWithoutItemCatagoryInput!]
  connectOrCreate: [ItemsCreateOrConnectWithoutItemCatagoryInput!]
  createMany: ItemsCreateManyItemCatagoryInputEnvelope
  connect: [ItemsWhereUniqueInput!]
}

input ItemsCreateWithoutItemCatagoryInput {
  id: String
  name: String!
  code: String!
  quantity: Int!
  unit_price: Float!
  replacements_scheduled: ReplacementsCreateNestedManyWithoutItemsInput
  created_at: DateTime
  updated_at: DateTime
}

input ItemsCreateOrConnectWithoutItemCatagoryInput {
  where: ItemsWhereUniqueInput!
  create: ItemsCreateWithoutItemCatagoryInput!
}

input ItemsCreateManyItemCatagoryInputEnvelope {
  data: [ItemsCreateManyItemCatagoryInput!]!
  skipDuplicates: Boolean
}

input ItemsCreateManyItemCatagoryInput {
  id: String
  name: String!
  code: String!
  quantity: Int!
  unit_price: Float!
  created_at: DateTime
  updated_at: DateTime
}

input ItemCatagoryUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  items: ItemsUpdateManyWithoutItemCatagoryNestedInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input ItemsUpdateManyWithoutItemCatagoryNestedInput {
  create: [ItemsCreateWithoutItemCatagoryInput!]
  connectOrCreate: [ItemsCreateOrConnectWithoutItemCatagoryInput!]
  upsert: [ItemsUpsertWithWhereUniqueWithoutItemCatagoryInput!]
  createMany: ItemsCreateManyItemCatagoryInputEnvelope
  set: [ItemsWhereUniqueInput!]
  disconnect: [ItemsWhereUniqueInput!]
  delete: [ItemsWhereUniqueInput!]
  connect: [ItemsWhereUniqueInput!]
  update: [ItemsUpdateWithWhereUniqueWithoutItemCatagoryInput!]
  updateMany: [ItemsUpdateManyWithWhereWithoutItemCatagoryInput!]
  deleteMany: [ItemsScalarWhereInput!]
}

input ItemsUpsertWithWhereUniqueWithoutItemCatagoryInput {
  where: ItemsWhereUniqueInput!
  update: ItemsUpdateWithoutItemCatagoryInput!
  create: ItemsCreateWithoutItemCatagoryInput!
}

input ItemsUpdateWithoutItemCatagoryInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unit_price: FloatFieldUpdateOperationsInput
  replacements_scheduled: ReplacementsUpdateManyWithoutItemsNestedInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input ItemsUpdateWithWhereUniqueWithoutItemCatagoryInput {
  where: ItemsWhereUniqueInput!
  data: ItemsUpdateWithoutItemCatagoryInput!
}

input ItemsUpdateManyWithWhereWithoutItemCatagoryInput {
  where: ItemsScalarWhereInput!
  data: ItemsUpdateManyMutationInput!
}

input ItemsCreateInput {
  id: BigInt
  name: String!
  code: String!
  quantity: Int!
  unit_price: Float!
  created_at: DateTime
  updated_at: DateTime
  catagory: catagoryCreateNestedOneWithoutItemsInput!
  replacements: ReplacementsCreateNestedManyWithoutItemsInput
}

input ItemsUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unit_price: FloatFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  catagory: catagoryUpdateOneRequiredWithoutItemsNestedInput
  replacements: ReplacementsUpdateManyWithoutItemsNestedInput
}

input MachinesCreateInput {
  id: BigInt
  name: String!
  label: String!
  profile: JSON
  priority: Int!
  created_at: DateTime
  updated_at: DateTime
  section: SectionsCreateNestedOneWithoutMachinesInput!
  maintenance: MaintenanceCreateNestedManyWithoutMachinesInput
  Ticket: TicketCreateNestedManyWithoutMachinesInput
  machine_catagory: machine_catagoryCreateNestedOneWithoutMachinesInput!
  routine_maintanances: routine_maintanancesCreateNestedManyWithoutMeachineInput
}

input MachinesUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  label: StringFieldUpdateOperationsInput
  profile: JSON
  priority: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  section: SectionsUpdateOneRequiredWithoutMachinesNestedInput
  maintenance: MaintenanceUpdateManyWithoutMachinesNestedInput
  Ticket: TicketUpdateManyWithoutMachinesNestedInput
  machine_catagory: machine_catagoryUpdateOneRequiredWithoutMachinesNestedInput
  routine_maintanances: routine_maintanancesUpdateManyWithoutMeachineNestedInput
}

input MaintenanceCreateInput {
  id: BigInt
  name: String!
  photo: String
  description: String!
  from: DateTime!
  to: DateTime!
  resolved: Boolean!
  metadata: JSON
  un_planned: Boolean!
  elapsed: DateTime
  created_at: DateTime
  updated_at: DateTime
  assignee: UsersCreateNestedOneWithoutMaintenanceInput!
  machines: MachinesCreateNestedOneWithoutMaintenanceInput!
  replacements: ReplacementsCreateNestedManyWithoutMaintenanceInput
  reports: ReportsCreateNestedManyWithoutMaintenanceInput
  ticket: TicketCreateNestedOneWithoutMaintenanceInput
}

input MaintenanceUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  photo: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  from: DateTimeFieldUpdateOperationsInput
  to: DateTimeFieldUpdateOperationsInput
  resolved: BoolFieldUpdateOperationsInput
  metadata: JSON
  un_planned: BoolFieldUpdateOperationsInput
  elapsed: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  assignee: UsersUpdateOneRequiredWithoutMaintenanceNestedInput
  machines: MachinesUpdateOneRequiredWithoutMaintenanceNestedInput
  replacements: ReplacementsUpdateManyWithoutMaintenanceNestedInput
  reports: ReportsUpdateManyWithoutMaintenanceNestedInput
  ticket: TicketUpdateOneWithoutMaintenanceNestedInput
}

input ReplacementsCreateInput {
  id: BigInt
  name: String!
  description: String!
  quantity: Int!
  metadata: JSON
  created_at: DateTime
  approved: Boolean
  updated_at: DateTime
  items: ItemsCreateNestedOneWithoutReplacementsInput!
  maintenance: MaintenanceCreateNestedOneWithoutReplacementsInput!
}

input ReplacementsUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  metadata: JSON
  created_at: DateTimeFieldUpdateOperationsInput
  approved: BoolFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  items: ItemsUpdateOneRequiredWithoutReplacementsNestedInput
  maintenance: MaintenanceUpdateOneRequiredWithoutReplacementsNestedInput
}

input machine_catagoryUpdateOneWithoutMachinesNestedInput {
  create: machine_catagoryCreateWithoutMachinesInput
  connectOrCreate: machine_catagoryCreateOrConnectWithoutMachinesInput
  upsert: machine_catagoryUpsertWithoutMachinesInput
  disconnect: Boolean
  delete: Boolean
  connect: machine_catagoryWhereUniqueInput
  update: machine_catagoryUpdateWithoutMachinesInput
}

input ReportsCreateInput {
  id: BigInt
  report: String!
  sign: String!
  tag: JSON!
  validated: BigInt!
  validated_sign: BigInt!
  created_at: DateTime
  updated_at: DateTime
  maintenance: MaintenanceCreateNestedOneWithoutReportsInput!
}

input ReportsUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  report: StringFieldUpdateOperationsInput
  sign: StringFieldUpdateOperationsInput
  tag: JSON
  validated: BigIntFieldUpdateOperationsInput
  validated_sign: BigIntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  maintenance: MaintenanceUpdateOneRequiredWithoutReportsNestedInput
}

input SectionCreateWithoutMachinesInput {
  id: String
  name: String!
  created_at: DateTime
  updated_at: DateTime
}

input SectionUpdateWithoutMachinesInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input UsersCreateInput {
  id: BigInt
  profile: JSON
  phone: String!
  name: String!
  created_at: DateTime
  updated_at: DateTime
  role: Role!
  extra_roles: UsersCreateextra_rolesInput
  role_alias: String
  maintenance: MaintenanceCreateNestedManyWithoutAssigneeInput
  ticket: TicketCreateNestedManyWithoutUserInput
  routine_maintanances: routine_maintanancesCreateNestedManyWithoutAssigneeInput
  production_data: production_dataCreateNestedManyWithoutUpdatedByInput
}

input UsersUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  profile: JSON
  phone: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  extra_roles: UsersUpdateextra_rolesInput
  role_alias: StringFieldUpdateOperationsInput
  maintenance: MaintenanceUpdateManyWithoutAssigneeNestedInput
  ticket: TicketUpdateManyWithoutUserNestedInput
  routine_maintanances: routine_maintanancesUpdateManyWithoutAssigneeNestedInput
  production_data: production_dataUpdateManyWithoutUpdatedByNestedInput
}

input TicketCreateInput {
  id: BigInt
  name: String!
  description: String!
  photos: String!
  status: ticket_status!
  created_at: DateTime
  updated_at: DateTime
  maintenance: MaintenanceCreateNestedOneWithoutTicketInput
  machines: MachinesCreateNestedOneWithoutTicketInput!
}

input TicketUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  photos: StringFieldUpdateOperationsInput
  status: Enumticket_statusFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  maintenance: MaintenanceUpdateOneWithoutTicketNestedInput
  machines: MachinesUpdateOneRequiredWithoutTicketNestedInput
}

input production_dataCreateInput {
  id: BigInt
  production: JSON
  shift: String!
  date: DateTime!
  created_at: DateTime
  updated_at: DateTime
  updatedBy: UsersCreateNestedOneWithoutProduction_dataInput!
}

input production_dataUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  production: JSON
  shift: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  updatedBy: UsersUpdateOneRequiredWithoutProduction_dataNestedInput
}

input routine_maintanancesCreateInput {
  id: BigInt
  name: String!
  description: String!
  cron: String!
  duration: Int!
  created_at: DateTime
  updated_at: DateTime
  assignee: UsersCreateNestedOneWithoutRoutine_maintanancesInput!
  meachine: MachinesCreateNestedOneWithoutRoutine_maintanancesInput!
}

input routine_maintanancesUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  cron: StringFieldUpdateOperationsInput
  duration: IntFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  assignee: UsersUpdateOneRequiredWithoutRoutine_maintanancesNestedInput
  meachine: MachinesUpdateOneRequiredWithoutRoutine_maintanancesNestedInput
}