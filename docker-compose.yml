version: '3'

services:
  db:
    image: 'postgres:latest'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: easycmms
    ports:
      - 5432:5432
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'easycmms']
      interval: 5s
      timeout: 5s
      retries: 5

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:6.0
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 3567:3567
    environment:
      API_KEYS: 'LDbmEHOd1t0vrkrxL2QTUMhjAg9V8P'
      POSTGRESQL_CONNECTION_URI: 'postgresql://postgres:root@db:5432/easycmms'
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: 'redis:latest'
    ports:
      - 6379:6379
    networks:
      - app_network
    restart: unless-stopped
    command: >
      --requirepass redispassword
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - 1080:1080
    networks:
      - app_network
    restart: unless-stopped

networks:
  app_network:
    driver: bridge
